window = {
	name = "BMU_claim_window"
	widgetid = "BMU_claim"
	parentanchor = center
	size = { 1000 750 }
	position = { 0 0 }
	layer = windows_layer
	filter_mouse = all
	alwaystransparent = no

	visible = "[GetVariableSystem.Exists('BMU_claim_window')]"
	
	using = Background_Fade
	using = Window_Background_Popup


	state = {
		name = _show
		on_start = "[GetVariableSystem.Set('BMU_claim_window_tab','contender')]"
	}

	state = {
		name = _hide
		on_finish = "[GetVariableSystem.Clear('bargain_with')]"
		on_finish = "[GetVariableSystem.Clear('bargain_for')]"
		on_finish = "[GetVariableSystem.Clear('ambitions_target')]"
		on_finish = "[GetVariableSystem.Set('BMU_claim_window_tab','contender')]"
		on_finish = "[GetScriptedGui('BMU_clear_bargain').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
	}
	
	margin_widget = {
		size = { 100% 100% }
		margin = { 0 5 }
		# # margin_right = 13

		widget = {
			size = { 100% 100% }
			datamodel = "[GetPlayer.MakeScope.GetList('BMU_stakeholder_stories')]"
			item = {
				vbox = {
					layoutpolicy_vertical = expanding
					datacontext = "[Scope.Var('pressed_claim_story').Var('claimed_title').Title]"
					visible = "[EqualTo_string(Scope.Var('pressed_claim_story').Var('claimed_title').Title.GetKey,GetVariableSystem.Get('BMU_claim_window'))]"
					margin_left = 10
					margin_right = 10

					header_pattern = {
						layoutpolicy_horizontal = expanding

						blockoverride "header_text"
						{
							text = "BMU_CLAIM_WINDOW_TITLE"
							# text = "[Scope.Var('pressed_claim_story').Var('claimed_title').Title.GetName]"
						}

						blockoverride "button_close"
						{
							onclick = "[GetVariableSystem.Clear('BMU_claim_window')]"
						}
					}
					# Header Candidates
					hbox = {
						layoutpolicy_horizontal = expanding
						hbox = {
							name = "my_candidate"
							# datacontext = "[Scope.Var('pressed_claim_story').Var('claim_target').Char]"
							visible = "[Character.IsValid]"
							layoutpolicy_horizontal = expanding
							# margin = { 70 0 }
							# margin_top = 20
	
							state = {
								name = _show
	
								duration = 0.2
	
								animation = {
									size = { 0 500 }
									bezier = { 0 0.5 0.5 1 }
								}
	
								animation = {
									alpha = 1
									bezier = { 0.5 0 1 0.5 }
								}
							}
	
							state = {
								name = _hide
								size = { 0 0 }
								alpha = 0
							}
	
							state = {
								name = "add_candidate"
								alpha = 0
								duration = 0.2
								next = "b"
								using = Animation_Curve_Default
							}
	
							state = {
								name = "b"
								alpha = 1
								duration = 0.2
								using = Animation_Curve_Default
							}
							# Claim Target
							hbox = {
								
								# background = {
								# 	using = Background_Area
								# 	margin_left = 0
								# }
								background = {

									spriteType = Corneredstretched
									spriteborder = { 15 15 }
									using = Color_Blue
									alpha = 0.6
									texture = "gfx/interface/component_masks/mask_frame.dds"
									
									margin = { 0 4 }
									margin_right = 50

									modify_texture = {
										blend_mode = alphamultiply
										alpha = 0.9
										mirror = horizontal
										texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
									}

									modify_texture = {
										mirror = vertical
										blend_mode = alphamultiply
										texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
									}
								}
								background = {
									spriteType = Corneredtiled
									using = Color_Blue
									alpha = 0.6
									texture = "gfx/interface/component_masks/patterns/mask_pattern_02.dds"
									
									margin = { 0 4 }
									margin_left = 0
									margin_right = 50

									modify_texture = {
										blend_mode = alphamultiply
										alpha = 0.9
										mirror = horizontal
										texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
									}

									modify_texture = {
										spriteType = Corneredtiled
										spriteborder = { 15 15 }
										blend_mode = alphamultiply
										texture = "gfx/interface/component_masks/mask_texture_01.dds"
									}

									modify_texture = {
										mirror = vertical
										blend_mode = alphamultiply
										texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
									}
								}
								datacontext = "[Scope.Var('pressed_claim_story').Var('claim_target').Char]"
								margin_left = 0
								portrait_torso = {
									
									state = {
										name = "on_player_election_nomination"
										next = "nomination_shown"
										alpha = 0.5
									}
		
									state = {
										name = "nomination_shown"
										alpha = 1
										duration = 0.5
										using = Animation_Curve_Default
									}
		
									blockoverride "opinion_box" {}
									blockoverride "status_icons" {}
								}
								vbox = {
									layoutpolicy_vertical = expanding
									
									vbox = {
										layoutpolicy_horizontal = expanding
										min_width = 250
										max_width = 250
										spacing = 5
		
										text_label_center = {
											layoutpolicy_horizontal = expanding
											text = "BMU_CLAIM_WINDOW_TARGET"
										}
		
										text_single = {
											text = "SUCCESSION_ELECTION_WINDOW_MY_CANDIDATE_INFO"
											default_format = "#high"
											using = Font_Size_Big
										}
		
										expand = {
											minimumsize = { 0 10 }
										}
		
										text_single = {
											text = "BMU_CLAIM_WINDOW_SUPPORTER_COUNT"
											# text = "[GuiScope.SetRoot(Character.MakeScope).AddScope('story',Scope.Var('pressed_claim_story').Story.MakeScope).ScriptValue('FF_BMU_contender_supporter_count')|0]"
											
											using = Font_Size_Medium
										}
	
										hbox = {
											icon = {
												name = "icon_combat_strength"
												size = { 30 30 }
												texture = "gfx/interface/icons/icon_soldier.dds"
											}
											spacer = {
												size = { 10 0 }
											}
											text_single = {
												default_format = "#high"
												text = "[GuiScope.SetRoot(Character.MakeScope).AddScope('pressed_claim',Scope.Var('pressed_claim_story').Story.MakeScope).ScriptValue('FF_BMU_contender_mil_strength')|0]"
											}
										}
									}
								}
		
								
							}
							expand = {}
							# Phase Counter
							vbox = {
								layoutpolicy_vertical = expanding
								spacing = 10
								# minimumsize = { 50 0 }
								# text = {
								# 	# align = center
								# 	# autoresize = no
								# 	text = "[Scope.Var('pressed_claim_story').Var('pressed_claim_phase').GetFlagName]"
								# }
								expand = {}
								container = {

									icon = {
										texture = "gfx/interface/buttons/button_lifestyles_base.dds"
										size = { 100% 100% }
									}
									
									progresspie = {
										name = "progress"
										size = { 80 80 }
										texture = "gfx/interface/progressbars/action_progress_thin.dds"
										framesize = { 124 124 }
										frame = 2
										widgetanchor = top|hcenter
										parentanchor = top|hcenter
										value = "[Scope.Var('pressed_claim_story').ScriptValue('FF_pressed_claim_story_duration')]"
										min = 0
										max = 1
									}
	
									icon = {
										name = "progress_frame"
										texture = "gfx/interface/icons/BMU_action_progress_frame.dds"
										size = { 100% 100% }
										parentanchor = center
										alpha = 0.5
									}

									# icon_doctrine = {
									# 	# visible = "[EqualTo_string(Scope.Var('status').GetFlagName,'dropout')]"
									# 	size = { 44 44 }
									# 	texture = "gfx/interface/icons/press_claim_status.dds"
									# 	framesize = { 70 70 }
									# 	frame = 2
									# 	parentanchor = center
									# }

									icon_doctrine = {
										# visible = "[EqualTo_string(Scope.Var('status').GetFlagName,'dropout')]"
										size = { 44 44 }
										texture = "gfx/interface/icons/press_claim_bargain.dds"
										# framesize = { 70 70 }
										# frame = 2
										parentanchor = center
									}

									# highlight_icon = {
									# 	texture = "gfx/interface/icons/flat_icons/inventory.dds"
									# 	alwaystransparent = yes
									# 	size = { 45 45 }
									# 	parentanchor = center
									# }
								}
								text_multi = {
									layoutpolicy_horizontal = expanding
									autoresize = yes
									using = Font_Size_Medium
									text = "[Scope.Var('pressed_claim_story').Var('pressed_claim_phase').GetFlagName]"
								}
								
								expand = {}
							}

							expand = {}
							# Player Contender choice
							hbox = {
								visible = "[And(EqualTo_string(Scope.Var('status').GetFlagName,'contender'),Not(ObjectsEqual(Scope.Var('pressed_claim_story').Var('claim_target').Char,GetPlayer.Self)))]"
								datacontext = "[GetPlayer]"
								margin_right = 20
								vbox = {
									layoutpolicy_vertical = expanding
									
									vbox = {
										min_width = 200
										spacing = 5
		
										text_label_center = {
											layoutpolicy_horizontal = expanding
											text = "BMU_CLAIM_WINDOW_CONTENDER"
										}
		
										text_single = {
											text = "SUCCESSION_ELECTION_WINDOW_MY_CANDIDATE_INFO"
											default_format = "#high"
											using = Font_Size_Big
										}
		
										expand = {
											minimumsize = { 0 10 }
										}
		
										text_single = {
											text = "BMU_CLAIM_WINDOW_SUPPORTER_COUNT"
											using = Font_Size_Medium
										}
	
										hbox = {
											icon = {
												name = "icon_combat_strength"
												size = { 30 30 }
												texture = "gfx/interface/icons/icon_soldier.dds"
											}
											spacer = {
												size = { 10 0 }
											}
											text_single = {
												default_format = "#high"
												text = "[GuiScope.SetRoot(Character.MakeScope).AddScope('pressed_claim',Scope.Var('pressed_claim_story').Story.MakeScope).ScriptValue('FF_BMU_contender_mil_strength')|0]"
											}
										}
									}
								}

								portrait_torso = {
									state = {
										name = "on_player_election_nomination"
										next = "nomination_shown"
										alpha = 0.5
									}
		
									state = {
										name = "nomination_shown"
										alpha = 1
										duration = 0.5
										using = Animation_Curve_Default
									}
		
									blockoverride "opinion_box" {}
									blockoverride "status_icons" {}
								}
	
								
							}
							# Top Contender (Player Target, Player Supporter)
							hbox = {
								background = {

									spriteType = Corneredstretched
									spriteborder = { 15 15 }
									using = Color_Blue
									alpha = 0.6
									texture = "gfx/interface/component_masks/mask_frame.dds"
									
									margin = { 0 4 }
									margin_left = 50

									modify_texture = {
										blend_mode = alphamultiply
										alpha = 0.9
										# mirror = horizontal
										texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
									}

									modify_texture = {
										mirror = vertical
										blend_mode = alphamultiply
										texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
									}
								}
								background = {
									spriteType = Corneredtiled
									using = Color_Blue
									alpha = 0.6
									texture = "gfx/interface/component_masks/patterns/mask_pattern_02.dds"
									
									margin = { 0 4 }
									margin_left = 50
									margin_right = 0

									modify_texture = {
										blend_mode = alphamultiply
										alpha = 0.9
										# mirror = horizontal
										texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
									}

									modify_texture = {
										spriteType = Corneredtiled
										spriteborder = { 15 15 }
										blend_mode = alphamultiply
										texture = "gfx/interface/component_masks/mask_texture_01.dds"
									}

									modify_texture = {
										mirror = vertical
										blend_mode = alphamultiply
										texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
									}
								}
								visible = "[Or(Not(EqualTo_string(Scope.Var('status').GetFlagName,'contender')),ObjectsEqual(Scope.Var('pressed_claim_story').Var('claim_target').Char,GetPlayer.Self))]"
								datacontext = "[Scope.Var('pressed_claim_story').Var('top_contender').Char]"
								# margin_right = 20
								vbox = {
									layoutpolicy_vertical = expanding
									
									vbox = {
										layoutpolicy_horizontal = expanding
										min_width = 250
										max_width = 250
										spacing = 5
		
										text_label_center = {
											layoutpolicy_horizontal = expanding
											text = "BMU_CLAIM_WINDOW_STRONGEST_CONTENDER"
										}
		
										text_single = {
											text = "SUCCESSION_ELECTION_WINDOW_MY_CANDIDATE_INFO"
											default_format = "#high"
											using = Font_Size_Big
										}
		
										expand = {
											minimumsize = { 0 10 }
										}
		
										text_single = {
											text = "BMU_CLAIM_WINDOW_SUPPORTER_COUNT"
											using = Font_Size_Medium
										}
	
										hbox = {
											icon = {
												name = "icon_combat_strength"
												size = { 30 30 }
												texture = "gfx/interface/icons/icon_soldier.dds"
											}
											spacer = {
												size = { 10 0 }
											}
											text_single = {
												default_format = "#high"
												text = "[GuiScope.SetRoot(Character.MakeScope).AddScope('pressed_claim',Scope.Var('pressed_claim_story').Story.MakeScope).ScriptValue('FF_BMU_contender_mil_strength')|0]"
											}
										}
									}
								}

								portrait_torso = {
									state = {
										name = "on_player_election_nomination"
										next = "nomination_shown"
										alpha = 0.5
									}
		
									state = {
										name = "nomination_shown"
										alpha = 1
										duration = 0.5
										using = Animation_Curve_Default
									}
		
									blockoverride "opinion_box" {}
									blockoverride "status_icons" {}
								}
	
								
							}
						}
					}
					#Tabs
					hbox = {
						layoutpolicy_horizontal = expanding

						button_tab = {
							layoutpolicy_horizontal = expanding
							text = "BMU_CLAIM_WINDOW_CLAIMANTS"

							onclick = "[GetVariableSystem.Set('BMU_claim_window_tab','claimants')]"
							onclick = "[GetVariableSystem.Clear('bargain_with')]"
							onclick = "[GetVariableSystem.Clear('bargain_for')]"
							down = "[GetVariableSystem.HasValue('BMU_claim_window_tab','claimants')]"

							text_single = {
								parentanchor = vcenter|right
								position = { -20 -2 }
								text = "[Scope.Var('pressed_claim_story').ScriptValue('FF_BMU_claimant_count')|0]"

								default_format = "#low"

								alpha = "[Select_float( GreaterThan_int32(GetDataModelSize(Story.MakeScope.GetList('claimants')), '(int32)0'), '(float)1.0', '(float)0.5' )]"
							}
						}

						button_tab = {
							layoutpolicy_horizontal = expanding
							text = "BMU_CLAIM_WINDOW_CONTENDERS"

							onclick = "[GetVariableSystem.Set('BMU_claim_window_tab','contender')]"
							onclick = "[GetVariableSystem.Clear('bargain_with')]"
							onclick = "[GetVariableSystem.Clear('bargain_for')]"
							down = "[GetVariableSystem.HasValue('BMU_claim_window_tab','contender')]"

							text_single = {
								parentanchor = vcenter|right
								position = { -20 -2 }
								text = "[Scope.Var('pressed_claim_story').ScriptValue('FF_BMU_contender_count')|0]"

								default_format = "#low"

								alpha = "[Select_float( GreaterThan_int32(GetDataModelSize(Story.MakeScope.GetList('contender')), '(int32)0'), '(float)1.0', '(float)0.5' )]"
							}
						}

						button_tab = {
							layoutpolicy_horizontal = expanding
							text = "BMU_CLAIM_WINDOW_STAKEHOLDERS"

							onclick = "[GetVariableSystem.Set('BMU_claim_window_tab','stakeholder')]"
							down = "[GetVariableSystem.HasValue('BMU_claim_window_tab','stakeholder')]"

							text_single = {
								parentanchor = vcenter|right
								position = { -20 -2 }
								text = "[Scope.Var('pressed_claim_story').ScriptValue('FF_BMU_stakeholder_count')|0]"

								default_format = "#low"

								alpha = "[Select_float( GreaterThan_int32(GetDataModelSize(Story.MakeScope.GetList('stakeholder')), '(int32)0'), '(float)1.0', '(float)0.5' )]"
							}
						}

						# button_tab = {
						# 	layoutpolicy_horizontal = expanding
						# 	text = "BMU_CLAIM_WINDOW_SUPPORTERS"

						# 	onclick = "[GetVariableSystem.Set('BMU_claim_window_tab','supporters')]"
						# 	down = "[GetVariableSystem.HasValue('BMU_claim_window_tab','supporters')]"

						# 	text_single = {
						# 		parentanchor = vcenter|right
						# 		position = { -20 -2 }
						# 		text = "[GetDataModelSize(Story.MakeScope.GetList('supporters'))]"

						# 		default_format = "#low"

						# 		alpha = "[Select_float( GreaterThan_int32(GetDataModelSize(Story.MakeScope.GetList('supporters')), '(int32)0'), '(float)1.0', '(float)0.5' )]"
						# 	}
						# }
					}

					widget = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							#Claimants
							vbox = {
								datacontext = "[Scope.Var('pressed_claim_story').Story]"
								visible = "[GetVariableSystem.HasValue('BMU_claim_window_tab','claimants')]"
								margin_bottom = 10
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								scrollbox = {
									visible = "[GetVariableSystem.HasValue('BMU_claim_window_tab','claimants')]"
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
									blockoverride "scrollbox_content" {
										datamodel = "[Story.MakeScope.GetList('BMU_pressed_claim_stakeholders')]"
										item = {
											hbox = {
												datacontext = "[Scope.Var('stakeholder').Char]"
												visible = "[Scope.Var('claimant').IsSet]"
												layoutpolicy_horizontal = expanding
												# state = {
												# 	name = _show
												# 	on_start = "[GetVariableSystem.Set('BMU_claim_window_tab','supporters')]"
												# 	# on_start = "[GetScriptedGui('BMU_test').Execute(GuiScope.SetRoot(Character.MakeScope).End)]"
												# }
												
												
												spacer = {
													visible = "[Not(Scope.Var('status').IsSet)]"
													size = { 44 44 }
												}
												
		
												icon_doctrine = {
													visible = "[Or(EqualTo_string(Scope.Var('status').GetFlagName,'dropout'),EqualTo_string(Scope.Var('status').GetFlagName,'supporter'))]"
													size = { 44 44 }
													texture = "gfx/interface/icons/press_claim_status.dds"
													framesize = { 70 70 }
													frame = 1
												}
		
												icon_doctrine = {
													visible = "[EqualTo_string(Scope.Var('status').GetFlagName,'contender')]"
													size = { 44 44 }
													texture = "gfx/interface/icons/press_claim_status.dds"
													framesize = { 70 70 }
													frame = 2
												}
		
												icon_doctrine = {
													visible = "[EqualTo_string(Scope.Var('status').GetFlagName,'stakeholder')]"
													size = { 44 44 }
													texture = "gfx/interface/icons/press_claim_status.dds"
													framesize = { 70 70 }
													frame = 3
												}
		
												BMU_widget_character_list_item = {
													minimumsize = { 700 0 }
													
												}
		
												# text_single = {
												# 	text = "[GuiScope.SetRoot(Character.MakeScope).AddScope('coveted_title',Scope.Var('pressed_claim_story').Var('claimed_title').Title.MakeScope).ScriptValue('FF_ambition_get_title')]"
												# 	tooltip = "[GuiScope.SetRoot(Character.MakeScope).AddScope('coveted_title',Scope.Var('pressed_claim_story').Var('claimed_title').Title.MakeScope).GetScriptValueDesc('FF_ambition_get_title')]"
												# }
		
												# spacer = {
												# 	size = { 10 0 }
												# }
		
												# text_single = {
												# 	text = "[GuiScope.SetRoot(Character.MakeScope).AddScope('candidate',Scope.Var('pressed_claim_story').Var('claimed_title').Title.GetHolder.MakeScope).AddScope('story',Scope.Var('pressed_claim_story').Story.MakeScope).ScriptValue('gui_BMU_contender_score')]"
												# 	tooltip = "[GuiScope.SetRoot(Character.MakeScope).AddScope('candidate',Scope.Var('pressed_claim_story').Var('claimed_title').Title.GetHolder.MakeScope).AddScope('story',Scope.Var('pressed_claim_story').Story.MakeScope).GetScriptValueDesc('gui_BMU_contender_score')]"
												# }
		
												# spacer = {
												# 	size = { 10 0 }
												# }
		
												# text_single = {
												# 	text = "[GuiScope.SetRoot(Character.MakeScope).AddScope('candidate',GetPlayer.MakeScope).AddScope('story',Scope.Var('pressed_claim_story').Story.MakeScope).ScriptValue('gui_BMU_contender_score')]"
												# 	tooltip = "[GuiScope.SetRoot(Character.MakeScope).AddScope('candidate',GetPlayer.MakeScope).AddScope('story',Scope.Var('pressed_claim_story').Story.MakeScope).GetScriptValueDesc('gui_BMU_contender_score')]"
												# }
												
												# vbox = {
												# 	# visible = "[GetScriptedGui('BMU_candidate_picked').IsShown(GuiScope.SetRoot(Character.MakeScope).AddScope('story',Story.MakeScope).End)]"
												# 	vbox = {
												# 		datamodel = "[Story.MakeScope.GetList('vote_stories')]"
												# 		item = {
												# 			hbox = {
												# 				# state = {
												# 				# 	name = _show
												# 				# 	on_start = "[GetScriptedGui('BMU_test').Execute(GuiScope.SetRoot(Character.MakeScope).End)]"
												# 				# }
												# 				portrait_head_small = {
												# 					visible = "[Scope.Var('top_candidate').IsSet]"
												# 					datacontext = "[Scope.Var('top_candidate').Char]"
												# 				}
												# 				text_single = {
												# 					# visible = "[And(Scope.Var('status').IsSet,Not(Scope.Var('status').GetFlagName)]"
												# 					text = "[Scope.Var('status').GetFlagName]"
												# 				}
												# 				text_single = {
												# 					visible = "[EqualTo_string(Scope.Var('status').GetFlagName,'supporter')]"
												# 					text = "[Character.MakeScope.ScriptValue('top_candidate_score')]"
												# 					tooltip = "[Character.MakeScope.GetScriptValueDesc('top_candidate_score')]"
												# 				}
												# 			}
												# 		}
												# 	}
												# }
												
												
		
												expand = {}
											}
										}
									}
								}
							}
							#Contenders
							vbox = {
								datacontext = "[Scope.Story]"
								visible = "[GetVariableSystem.HasValue('BMU_claim_window_tab','contender')]"
								margin_bottom = 10
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								scrollbox = {
									# visible = "[GetVariableSystem.HasValue('BMU_claim_window_tab','contender')]"
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
									blockoverride "scrollbox_content" {
										vbox = {
											layoutpolicy_horizontal = expanding
											datamodel = "[Scope.Var('pressed_claim_story').GetList('BMU_pressed_claim_stakeholders')]"
											item = {
												hbox = {
													visible = "[EqualTo_string(Scope.Var('status').GetFlagName,GetVariableSystem.Get('BMU_claim_window_tab'))]"
													datacontext = "[Scope.Var('stakeholder').Char]"
													layoutpolicy_horizontal = expanding
													BMU_widget_character_list_item = {
														# blockoverride "claims_visibility" {
														# 	visible = no
														# }
														minimumsize = { 500 0 }
														
													}
													spacer = {
														size = { 20 0 }
													}
													vbox = {
														spacing = 10
														text_single = {
															text = "BMU_CLAIM_WINDOW_SUPPORTER_COUNT"
															# text = "[GuiScope.SetRoot(Character.MakeScope).AddScope('story',Scope.Var('pressed_claim_story').Story.MakeScope).ScriptValue('FF_BMU_contender_supporter_count')|0]"
															
															using = Font_Size_Small
														}
					
														hbox = {
															icon = {
																name = "icon_combat_strength"
																size = { 20 20 }
																texture = "gfx/interface/icons/icon_soldier.dds"
															}
															spacer = {
																size = { 10 0 }
															}
															text_single = {
																default_format = "#high"
																text = "[GuiScope.SetRoot(Character.MakeScope).AddScope('pressed_claim',Scope.Var('pressed_claim_story').Story.MakeScope).ScriptValue('FF_BMU_contender_mil_strength')|0]"
															}
															spacer = {
																size = { 10 0 }
															}
														}
														text_single = {
															default_format = "#high"
															text = "[GuiScope.SetRoot(Character.MakeScope).AddScope('pressed_claim',Scope.Var('pressed_claim_story').Story.MakeScope).ScriptValue('FF_confidence')|0%]"
														}
													}
													expand = {}
													hbox = {
														visible = "[EqualTo_string(Story.MakeScope.Var('status').GetFlagName,'supporter')]"
														# button = {
														# 	# visible = "[GetScriptedGui('BMU_ambition_get_title').IsShown(GuiScope.SetRoot(Scope.Story.MakeScope).AddScope('contender',GetPlayer.MakeScope).End)]"
														# 	# enabled = "[GetScriptedGui('BMU_ambition_get_title').IsValid(GuiScope.SetRoot(Scope.Story.MakeScope).AddScope('contender',GetPlayer.MakeScope).End)]"
														# 	texture = "gfx/interface/icons/message_feed/titles.dds"
														# 	size = { 50 50 }
														# 	tooltipwidget = BMU_stakeholder_ambition_tooltip
														# 	using = BMU_claim_window_clear_system_variables
														# 	onclick = "[GetVariableSystem.Set('bargain_for','FF_ambition_get_title')]"
														# 	onclick = "[GetVariableSystem.Set('ambitions_target',Scope.Var('stakeholder').Char.GetPrimaryTitle.GetKey)]"
														# }
														# icon = {
														# 	texture = "gfx/interface/icons/ambition_get_child_title.dds"
														# 	size = { 50 50 }
														# 	tooltipwidget = BMU_stakeholder_ambition_tooltip
														# }
														button = {
															enabled = "[GetScriptedGui('BMU_bargain_for_council_position').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('contender',Scope.Story.MakeScope).End)]"
															texture = "gfx/interface/icons/message_feed/council.dds"
															size = { 50 50 }
															tooltip = "[GetScriptedGui('BMU_bargain_for_council_position').IsValidTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('contender',Scope.Story.MakeScope).End)]"
															using = BMU_claim_window_clear_system_variables
															onclick = "[GetVariableSystem.Set('bargain_for','FF_ambition_get_council_position')]"
															# onclick = "[GetVariableSystem.Set('bargain_for_target',Scope.Var('claimant_index').GetValue)]"
															onclick = "[GetScriptedGui('BMU_bargain_for_contender_select').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('contender',Scope.Story.MakeScope).End)]"
														}
														# icon = {
														# 	texture = "gfx/interface/icons/icon_gold.dds"
														# 	size = { 50 50 }
														# 	tooltipwidget = BMU_stakeholder_ambition_tooltip
														# }
													}
												}
											}
										}
									}
								}
								expand = {
								}
							}
							#Stakeholders
							vbox = {
								datacontext = "[Scope.Story]"
								visible = "[GetVariableSystem.HasValue('BMU_claim_window_tab','stakeholder')]"
								margin_bottom = 10
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								scrollbox = {
									# visible = "[GetVariableSystem.HasValue('BMU_claim_window_tab','contender')]"
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
									blockoverride "scrollbox_content" {
										vbox = {
											layoutpolicy_horizontal = expanding
											datamodel = "[Story.MakeScope.Var('pressed_claim_story').GetList('BMU_pressed_claim_stakeholders')]"
											item = {
												vbox = {
													visible = "[Or(EqualTo_string(Scope.Var('status').GetFlagName,'supporter'),EqualTo_string(Scope.Var('status').GetFlagName,'stakeholder'))]"
													datacontext = "[Scope.Var('stakeholder').Char]"
													layoutpolicy_horizontal = expanding
													hbox = {
														layoutpolicy_horizontal = expanding
														margin = { 0 5 }
		
														text_single = {
															layoutpolicy_horizontal = expanding
															text = "[Character.GetNameNoTooltip]"
															align = left
															max_width = 535
														}
		
														expand = {}
		
														background = {
															using = Background_Area
														}
													}
													hbox = {
														layoutpolicy_horizontal = expanding
														portrait_head_small = {
														}
														portrait_head_small = {
															datacontext = "[Scope.Var('contender').Var('stakeholder').Char]"
														}
														vbox = {
															hbox = {
																min_width = 75
																layoutpolicy_horizontal = expanding
																icon = {
																	name = "icon_combat_strength"
																	size = { 30 30 }
																	texture = "gfx/interface/icons/icon_soldier.dds"
																}
																spacer = { size = { 10 0 }}
																expand = {}
																text_single = {
																	text = "[Character.GetMaxMilitaryStrength|0V]"
																}
															}
															hbox = {
																min_width = 75
																layoutpolicy_horizontal = expanding
																visible = "[Or(Not(Story.MakeScope.Var('contender').IsSet),ObjectsEqual(Scope.Var('contender').Var('stakeholder').Char,Story.MakeScope.Var('contender').Var('stakeholder').Char))]"
																vote_chance_icon = {}
																spacer = { size = { 10 0 }}
																expand = {}
															}
															hbox = {
																layoutpolicy_horizontal = expanding
																visible = "[And(Story.MakeScope.Var('contender').IsSet,Not(ObjectsEqual(Scope.Var('contender').Var('stakeholder').Char,Story.MakeScope.Var('contender').Var('stakeholder').Char)))]"
																tooltipwidget = BMU_support_score_tooltip
																vote_chance_icon = {}
																spacer = { size = { 10 0 }}
																expand = {}
																text_single = {
																	text = "[GuiScope.SetRoot(Character.MakeScope).AddScope('pressed_claim',Scope.Var('pressed_claim_story').Story.MakeScope).AddScope('claim_target',Scope.Var('pressed_claim_story').Var('claim_target').Char.MakeScope).AddScope('claimed_title',Scope.Var('pressed_claim_story').Var('claimed_title').Title.MakeScope).AddScope('supporter_story',Scope.Story.MakeScope).AddScope('player_story',Story.MakeScope).ScriptValue('FF_BMU_supporter_diff_3')|0+V]"
																}
															}
														}
														spacer = { size = { 20 0 }}
														hbox = {
															visible = "[EqualTo_string(Story.MakeScope.Var('status').GetFlagName,'contender')]"
															button = {
																# visible = "[GetScriptedGui('BMU_ambition_get_title').IsShown(GuiScope.SetRoot(Scope.Story.MakeScope).AddScope('contender',GetPlayer.MakeScope).End)]"
																enabled = "[GetScriptedGui('BMU_ambition_get_title').IsValid(GuiScope.SetRoot(Scope.Story.MakeScope).AddScope('contender',GetPlayer.MakeScope).End)]"
																texture = "gfx/interface/icons/message_feed/titles.dds"
																size = { 50 50 }
																tooltipwidget = BMU_stakeholder_ambition_tooltip
																using = BMU_claim_window_clear_system_variables
																onclick = "[GetVariableSystem.Set('bargain_with','FF_ambition_get_title')]"
																onclick = "[GetVariableSystem.Set('ambitions_target',Scope.Var('stakeholder').Char.GetPrimaryTitle.GetKey)]"
															}
															# icon = {
															# 	texture = "gfx/interface/icons/ambition_get_child_title.dds"
															# 	size = { 50 50 }
															# 	tooltipwidget = BMU_stakeholder_ambition_tooltip
															# }
															button = {
																enabled = "[GetScriptedGui('BMU_bargain_with_council_position').IsValid(GuiScope.SetRoot(Scope.Story.MakeScope).AddScope('contender',GetPlayer.MakeScope).End)]"
																texture = "gfx/interface/icons/message_feed/council.dds"
																size = { 50 50 }
																tooltipwidget = BMU_stakeholder_ambition_tooltip
																using = BMU_claim_window_clear_system_variables
																onclick = "[GetVariableSystem.Set('bargain_with','FF_ambition_get_council_position')]"
																onclick = "[GetVariableSystem.Set('ambitions_target',Scope.Var('stakeholder').Char.GetPrimaryTitle.GetKey)]"
															}
															# icon = {
															# 	texture = "gfx/interface/icons/icon_gold.dds"
															# 	size = { 50 50 }
															# 	tooltipwidget = BMU_stakeholder_ambition_tooltip
															# }
														}
														expand = {}
														hbox = {
															datamodel = "[Scope.GetList('BMU_stakeholder_ambitions')]"
															item = {
																hbox = {
																	visible = "[Scope.Var('bargained').IsSet]"
																	spacing = 10
																	icon_doctrine = {
																		size = { 44 44 }
																		texture = "gfx/interface/icons/press_claim_bargain.dds"
																	}
																	vbox = {
																		text_single = {
																			visible = "[EqualTo_string(Scope.Var('ambition').GetFlagName,'FF_ambition_get_council_position')]"
																			text = "BMU_BARGAIN_STRUCK_WITH"
																		}
																		text_single = {
																			visible = "[EqualTo_string(Scope.Var('ambition').GetFlagName,'FF_ambition_get_council_position')]"
																			text = "BMU_BARGAIN_STRUCK_FOR"
																		}
																	}
																}
															}
														}
													}
													expand = {}
												}
											}
										}
									}
								}
								expand = {
								}
							}

						}
						#Bargain With
						widget = {
							visible = "[GetVariableSystem.Exists('bargain_with')]"
							# visible = no
							parentanchor = top|right
							size = { 350 425 }
							state = {
								name = _show
								using = Animation_FadeIn_Quick
								using = Sound_WindowShow_Standard
							}
							vbox = {
								# Story is Contender
								datacontext = "[Scope.Story]"
								size = { 350 425 }
								visible = "[GetVariableSystem.Exists('bargain_with')]"
								layoutpolicy_vertical = expanding
								background = {
									using = Background_Area_Solid
								
								}
								background = {
								
									using = Background_Frame_Gold
								}
								datamodel = "[Scope.Var('pressed_claim_story').GetList('BMU_pressed_claim_stakeholders')]"
								item = {
									vbox = {
										size = { 350 425 }
										visible = "[ObjectsEqual(Scope.Var('stakeholder').Char.GetPrimaryTitle.GetKey,GetVariableSystem.Get('ambitions_target'))]"
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding
										
										text_single = {
											minimumsize = { 0 50 }
											# raw_text = "Bargain with [Scope.Var('stakeholder').Char.GetShortUINameNoTooltip]"
											raw_text = "Bargain with [Scope.Var('stakeholder').Char.GetShortUINameNoTooltip]"
										}

										scrollbox = {
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding
											blockoverride "scrollbox_content" {
												vbox = {
													layoutpolicy_horizontal = expanding
													spacing = 3
													datamodel = "[Scope.GetList('BMU_stakeholder_ambitions')]"
													item = {
														container = {
															ignoreinvisible = yes
															#Get Title
															widget = {
																layoutpolicy_horizontal = expanding
																size = { 320 45 }
																visible = "[And(EqualTo_string(Scope.Var('ambition').GetFlagName,'FF_ambition_get_title'),GetVariableSystem.HasValue('bargain_with','FF_ambition_get_title')))]"
																button_standard = {
																	visible = "[GetScriptedGui('BMU_ambition_get_coveted_title').IsShown(GuiScope.SetRoot(Scope.Story.MakeScope).AddScope('ambition_type',MakeScopeFlag(GetVariableSystem.Get('bargain_with'))).AddScope('contender',GetPlayer.MakeScope).End)]"
																	datacontext = "[Scope.Var('coveted_title').Title]"
																	size = { 320 45 }
																	# down = "[InteractionTitleItem.IsSelected]"
																	# enabled = "[InteractionTitleItem.IsSelectable]"
																	# tooltip = "[InteractionTitleItem.GetTooltip]"
																	coa_title_tiny_crown = {
																		position = { 0 -8 }
																		blockoverride "coa_button" {
																			down = "[GetVariableSystem.HasValue('coveted_title',Title.GetKey)]"
																			onclick = "[GetVariableSystem.Set('coveted_title',Title.GetKey)]"
																		}
																	}
																	hbox = {
																		margin_left = 45
																		margin_right = 5
																		layoutpolicy_horizontal = expanding
																		text_single = {
																			# text = "[Scope.Var('ambition_score').GetValue|0]"
																			text = "[Title.GetName]"
																			# text = "[Scope.Var('story_owner').Char.GetShortUIName]"
																		}
																		expand = {}
																		text_single = {
																			text = "[Scope.Var('ambition_score').GetValue|0]"
																		}
																		text_single = {
																			text = "[GuiScope.SetRoot(Scope.Var('stakeholder_story').Var('stakeholder').Char.MakeScope).AddScope('bargain',Scope.Story.MakeScope).AddScope('contender',Story.MakeScope).ScriptValue('FF_bargain_acceptance')|0]"
																		}
																	}
																}
															}
															#Get Council Position
															widget = {
																layoutpolicy_horizontal = expanding
																size = { 320 45 }
																visible = "[And(EqualTo_string(Scope.Var('ambition').GetFlagName,'FF_ambition_get_council_position'),GetVariableSystem.HasValue('bargain_with','FF_ambition_get_council_position')))]"
																button_standard = {
																	# visible = "[GetScriptedGui('BMU_bargain_with_council_position').IsShown(GuiScope.SetRoot(Scope.Story.MakeScope).AddScope('ambition_type',MakeScopeFlag(GetVariableSystem.Get('bargain_with'))).AddScope('contender',GetPlayer.MakeScope).End)]"
																	size = { 320 45 }
																	down = "[GetScriptedGui('BMU_set_bargain_with').IsShown(GuiScope.SetRoot(Story.MakeScope).AddScope('bargain',Scope.Story.MakeScope).AddScope('contender',Story.MakeScope).AddScope('supporter',Scope.Var('stakeholder_story').Story.MakeScope).End)]"
																	enabled = "[GetScriptedGui('BMU_set_bargain_with').IsValid(GuiScope.SetRoot(Story.MakeScope).AddScope('bargain',Scope.Story.MakeScope).AddScope('contender',Story.MakeScope).AddScope('supporter',Scope.Var('stakeholder_story').Story.MakeScope).End)]"
																	tooltip = "[GetScriptedGui('BMU_set_bargain_with').IsValidTooltip(GuiScope.SetRoot(Story.MakeScope).AddScope('bargain',Scope.Story.MakeScope).AddScope('contender',Story.MakeScope).AddScope('supporter',Scope.Var('stakeholder_story').Story.MakeScope).End)]"
																	onclick = "[GetScriptedGui('BMU_set_bargain_with').Execute(GuiScope.SetRoot(Story.MakeScope).AddScope('bargain',Scope.Story.MakeScope).AddScope('contender',Story.MakeScope).AddScope('supporter',Scope.Var('stakeholder_story').Story.MakeScope).End)]"
																	hbox = {
																		margin_left = 5
																		margin_right = 5
																		spacing = 5
																		layoutpolicy_horizontal = expanding
																		icon = {
																			visible = "[EqualTo_string(Scope.Var('council_position').GetFlagName,'chancellor')]"
																			size = { 30 30 }
																			framesize = { 60 60 }
																			frame = 1
																			texture = "gfx/interface/icons/icon_skills.dds"
																		}
																		icon = {
																			visible = "[EqualTo_string(Scope.Var('council_position').GetFlagName,'steward')]"
																			size = { 30 30 }
																			framesize = { 60 60 }
																			frame = 3
																			texture = "gfx/interface/icons/icon_skills.dds"
																		}
																		icon = {
																			visible = "[EqualTo_string(Scope.Var('council_position').GetFlagName,'marshal')]"
																			size = { 30 30 }
																			framesize = { 60 60 }
																			frame = 2
																			texture = "gfx/interface/icons/icon_skills.dds"
																		}
																		icon = {
																			visible = "[EqualTo_string(Scope.Var('council_position').GetFlagName,'spymaster')]"
																			size = { 30 30 }
																			framesize = { 60 60 }
																			frame = 4
																			texture = "gfx/interface/icons/icon_skills.dds"
																		}
																		text_single = {
																			text = "[Localize(Concatenate(Scope.Var('council_position').GetFlagName,'_name'))]"
																		}
																		expand = {}
																		icon = {
																			visible = "[GreaterThan_CFixedPoint(GuiScope.SetRoot(Scope.Var('stakeholder_story').Var('stakeholder').Char.MakeScope).AddScope('bargain',Scope.Story.MakeScope).AddScope('contender',Story.MakeScope).ScriptValue('FF_bargain_acceptance'),'(CFixedPoint)0')]"
																			tooltip = "[GuiScope.SetRoot(Scope.Var('stakeholder_story').Var('stakeholder').Char.MakeScope).AddScope('bargain',Scope.Story.MakeScope).AddScope('contender',Story.MakeScope).GetScriptValueDesc('FF_bargain_acceptance')|0]"
																			texture = "gfx/interface/icons/symbols/icon_check.dds"
																			size = { 30 30 }
																		}
																		icon = {
																			visible = "[Not(GreaterThan_CFixedPoint(GuiScope.SetRoot(Scope.Var('stakeholder_story').Var('stakeholder').Char.MakeScope).AddScope('bargain',Scope.Story.MakeScope).AddScope('contender',Story.MakeScope).ScriptValue('FF_bargain_acceptance'),'(CFixedPoint)0'))]"
																			tooltip = "[GuiScope.SetRoot(Scope.Var('stakeholder_story').Var('stakeholder').Char.MakeScope).AddScope('bargain',Scope.Story.MakeScope).AddScope('contender',Story.MakeScope).GetScriptValueDesc('FF_bargain_acceptance')|0]"
																			texture = "gfx/interface/icons/symbols/icon_cross.dds"
																			size = { 30 30 }
																		}
																	}
																}
															}
														}
													}
													# expand = {}
												}
											}
										}
										# text_multi = {
										# 	visible = "[GetVariableSystem.Exists('coveted_title')]"
										# 	raw_text = "[GetTitleByKey(GetVariableSystem.Get('coveted_title')).GetName]"
										# 	default_format = "#high"
										# 	autoresize = yes
										# 	max_width = 345
										# 	align = nobaseline
										# 	margin = { 2 0 }
										# }
										text_single = {
											default_format = "#high"
											autoresize = yes
											max_width = 345
											align = nobaseline
											margin = { 2 0 }
											raw_text = "If you win your claim:"
										}
										text_multi = {
											# visible = "[GetVariableSystem.Exists('council_position')]"
											# raw_text = "[GetTitleByKey(GetVariableSystem.Get('coveted_title')).GetName]"
											text = "[GetScriptedGui('BMU_send_bargain').ExecuteTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('contender',Story.MakeScope).End)]"
											default_format = "#high"
											autoresize = yes
											max_width = 345
											align = nobaseline
											margin = { 2 0 }
										}
										button_primary = {
											name = "next_step"
											size = { 345 50 }
											enabled = "[GetScriptedGui('BMU_send_bargain').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('contender',Story.MakeScope).End)]"
											tooltip = "[GetScriptedGui('BMU_send_bargain').IsValidTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('contender',Story.MakeScope).End)]"
											onclick = "[GetScriptedGui('BMU_send_bargain').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('contender',Story.MakeScope).End)]"

											raw_text = "Bargain with [Scope.Var('stakeholder').Char.GetShortUINameNoTooltip]"
											# raw_text = "[Story.MakeScope.Var('stakeholder').Char.GetShortUIName]"
											clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_advance"
										}
									}
								}
								expand = {}
							}
							
						}
						#Bargain For
						widget = {
							visible = "[GetVariableSystem.Exists('bargain_for')]"
							# visible = no
							parentanchor = top|right
							size = { 350 425 }
							state = {
								name = _show
								using = Animation_FadeIn_Quick
								using = Sound_WindowShow_Standard
							}
							vbox = {
								# Story is Supporter
								# datacontext = "[Scope.Story]"
								size = { 350 425 }
								visible = "[GetVariableSystem.Exists('bargain_for')]"
								layoutpolicy_vertical = expanding
								background = {
									using = Background_Area_Solid
								
								}
								background = {
								
									using = Background_Frame_Gold
								}
								datamodel = "[Scope.Var('pressed_claim_story').GetList('BMU_pressed_claim_stakeholders')]"
								item = {
									vbox = {
										# Story is Contender
										datacontext = "[Scope.Story]"
										size = { 350 425 }
										visible = "[ObjectsEqual(Scope.Var('stakeholder').Char,GetPlayer.MakeScope.Var('bargain_for_contender_select').Var('stakeholder').Char)]"
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding
										
										text_single = {
											minimumsize = { 0 50 }
											raw_text = "Bargain with [GetPlayer.MakeScope.Var('bargain_for_contender_select').Var('stakeholder').Char.GetShortUIName]"
										}

										scrollbox = {
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding
											blockoverride "scrollbox_content" {
												vbox = {
													layoutpolicy_horizontal = expanding
													# layoutpolicy_vertical = expanding
													datamodel = "[GetPlayer.MakeScope.GetList('BMU_stakeholder_stories')]"
													item = {
														vbox = {
															layoutpolicy_vertical = expanding
															visible = "[ObjectsEqual(Scope.Var('pressed_claim_story').Story,Story.MakeScope.Var('pressed_claim_story').Story)]"
															datamodel = "[Scope.GetList('BMU_stakeholder_ambitions')]"
															spacing = 3
															item = {
																container = {
																	ignoreinvisible = yes
																	#Get Title
																	# widget = {
																	# 	layoutpolicy_horizontal = expanding
																	# 	size = { 320 45 }
																	# 	visible = "[And(EqualTo_string(Scope.Var('ambition').GetFlagName,'FF_ambition_get_title'),GetVariableSystem.HasValue('bargain_with','FF_ambition_get_title')))]"
																	# 	button_standard = {
																	# 		visible = "[GetScriptedGui('BMU_ambition_get_coveted_title').IsShown(GuiScope.SetRoot(Scope.Story.MakeScope).AddScope('ambition_type',MakeScopeFlag(GetVariableSystem.Get('bargain_with'))).AddScope('contender',GetPlayer.MakeScope).End)]"
																	# 		datacontext = "[Scope.Var('coveted_title').Title]"
																	# 		size = { 320 45 }
																	# 		# down = "[InteractionTitleItem.IsSelected]"
																	# 		# enabled = "[InteractionTitleItem.IsSelectable]"
																	# 		# tooltip = "[InteractionTitleItem.GetTooltip]"
																	# 		coa_title_tiny_crown = {
																	# 			position = { 0 -8 }
																	# 			blockoverride "coa_button" {
																	# 				down = "[GetVariableSystem.HasValue('coveted_title',Title.GetKey)]"
																	# 				onclick = "[GetVariableSystem.Set('coveted_title',Title.GetKey)]"
																	# 			}
																	# 		}
																	# 		hbox = {
																	# 			margin_left = 45
																	# 			margin_right = 5
																	# 			layoutpolicy_horizontal = expanding
																	# 			text_single = {
																	# 				# text = "[Scope.Var('ambition_score').GetValue|0]"
																	# 				text = "[Title.GetName]"
																	# 				# text = "[Scope.Var('story_owner').Char.GetShortUIName]"
																	# 			}
																	# 			expand = {}
																	# 			text_single = {
																	# 				text = "[Scope.Var('ambition_score').GetValue|0]"
																	# 			}
																	# 			text_single = {
																	# 				text = "[GuiScope.SetRoot(Scope.Var('stakeholder_story').Var('stakeholder').Char.MakeScope).AddScope('bargain',Scope.Story.MakeScope).AddScope('contender',Story.MakeScope).ScriptValue('FF_bargain_acceptance')|0]"
																	# 			}
																	# 		}
																	# 	}
																	# }
																	#Get Council Position
																	widget = {
																		layoutpolicy_horizontal = expanding
																		size = { 320 45 }
																		visible = "[And(EqualTo_string(Scope.Var('ambition').GetFlagName,'FF_ambition_get_council_position'),GetVariableSystem.HasValue('bargain_for','FF_ambition_get_council_position')))]"
																		button_standard = {
																			size = { 320 45 }
																			down = "[GetScriptedGui('BMU_set_bargain_for').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('bargain',Scope.Story.MakeScope).AddScope('supporter',Scope.Var('stakeholder_story').Story.MakeScope).AddScope('contender',Story.MakeScope).End)]"
																			enabled = "[GetScriptedGui('BMU_set_bargain_for').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('bargain',Scope.Story.MakeScope).AddScope('supporter',Scope.Var('stakeholder_story').Story.MakeScope).AddScope('contender',Story.MakeScope).End)]"
																			tooltip = "[GetScriptedGui('BMU_set_bargain_for').IsValidTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('bargain',Scope.Story.MakeScope).AddScope('supporter',Scope.Var('stakeholder_story').Story.MakeScope).AddScope('contender',Story.MakeScope).End)]"
																			onclick = "[GetScriptedGui('BMU_set_bargain_for').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('bargain',Scope.Story.MakeScope).AddScope('supporter',Scope.Var('stakeholder_story').Story.MakeScope).AddScope('contender',Story.MakeScope).End)]"
																			hbox = {
																				margin_left = 5
																				margin_right = 5
																				spacing = 5
																				layoutpolicy_horizontal = expanding
																				icon = {
																					visible = "[EqualTo_string(Scope.Var('council_position').GetFlagName,'chancellor')]"
																					size = { 30 30 }
																					framesize = { 60 60 }
																					frame = 1
																					texture = "gfx/interface/icons/icon_skills.dds"
																				}
																				icon = {
																					visible = "[EqualTo_string(Scope.Var('council_position').GetFlagName,'steward')]"
																					size = { 30 30 }
																					framesize = { 60 60 }
																					frame = 3
																					texture = "gfx/interface/icons/icon_skills.dds"
																				}
																				icon = {
																					visible = "[EqualTo_string(Scope.Var('council_position').GetFlagName,'marshal')]"
																					size = { 30 30 }
																					framesize = { 60 60 }
																					frame = 2
																					texture = "gfx/interface/icons/icon_skills.dds"
																				}
																				icon = {
																					visible = "[EqualTo_string(Scope.Var('council_position').GetFlagName,'spymaster')]"
																					size = { 30 30 }
																					framesize = { 60 60 }
																					frame = 4
																					texture = "gfx/interface/icons/icon_skills.dds"
																				}
																				text_single = {
																					text = "[Localize(Concatenate(Scope.Var('council_position').GetFlagName,'_name'))]"
																				}
																				expand = {}
																				icon = {
																					visible = "[GreaterThan_CFixedPoint(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('bargain',Scope.Story.MakeScope).AddScope('supporter',Scope.Var('stakeholder_story').Story.MakeScope).AddScope('contender',Story.MakeScope).AddScope('pressed_claim',Story.MakeScope.Var('pressed_claim_story').Story.MakeScope).ScriptValue('FF_bargain_for_acceptance'),'(CFixedPoint)0')]"
																					tooltip = "[GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('bargain',Scope.Story.MakeScope).AddScope('supporter',Scope.Var('stakeholder_story').Story.MakeScope).AddScope('contender',Story.MakeScope).AddScope('pressed_claim',Story.MakeScope.Var('pressed_claim_story').Story.MakeScope).GetScriptValueDesc('FF_bargain_for_acceptance')]"
																					texture = "gfx/interface/icons/symbols/icon_check.dds"
																					size = { 30 30 }
																				}
																				icon = {
																					visible = "[Not(GreaterThan_CFixedPoint(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('bargain',Scope.Story.MakeScope).AddScope('supporter',Scope.Var('stakeholder_story').Story.MakeScope).AddScope('contender',Story.MakeScope).AddScope('pressed_claim',Story.MakeScope.Var('pressed_claim_story').Story.MakeScope).ScriptValue('FF_bargain_for_acceptance'),'(CFixedPoint)0'))]"
																					tooltip = "[GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('bargain',Scope.Story.MakeScope).AddScope('supporter',Scope.Var('stakeholder_story').Story.MakeScope).AddScope('contender',Story.MakeScope).AddScope('pressed_claim',Story.MakeScope.Var('pressed_claim_story').Story.MakeScope).GetScriptValueDesc('FF_bargain_for_acceptance')]"
																					texture = "gfx/interface/icons/symbols/icon_cross.dds"
																					size = { 30 30 }
																				}
																			}
																		}
																	}
																}
															}
															expand = {}
														}
													}
													expand = {}
												}
											}
										}
										text_single = {
											visible = no
											default_format = "#high"
											autoresize = yes
											max_width = 345
											align = nobaseline
											margin = { 2 0 }
											raw_text = "If you win your claim:"
										}
										text_multi = {
											# visible = "[GetVariableSystem.Exists('council_position')]"
											visible = no
											# raw_text = "[GetTitleByKey(GetVariableSystem.Get('coveted_title')).GetName]"
											text = "[GetScriptedGui('BMU_send_bargain_for').ExecuteTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('contender',Story.MakeScope).End)]"
											default_format = "#high"
											autoresize = yes
											max_width = 345
											align = nobaseline
											margin = { 2 0 }
										}
										button_primary = {
											# visible = no
											name = "next_step"
											size = { 345 50 }
											enabled = "[GetScriptedGui('BMU_send_bargain_for').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('contender',Story.MakeScope).End)]"
											tooltip = "[GetScriptedGui('BMU_send_bargain_for').IsValidTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('contender',Story.MakeScope).End)]"
											onclick = "[GetScriptedGui('BMU_send_bargain_for').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('contender',Story.MakeScope).End)]"

											raw_text = "Bargain with [Scope.Var('stakeholder').Char.GetShortUINameNoTooltip]"
											# raw_text = "[Story.MakeScope.Var('stakeholder').Char.GetShortUIName]"
											clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_advance"
										}
									}
								}
								expand = {}
							}
							
						}
					}

					

					expand = {
						layoutpolicy_vertical = growing
					}
				}
			}
		}
	}
}

window = {
	name = "BMU_claim_icon"
	widgetid = "BMU_claim_icon"
	position = { 500 -70 }
	layer = hud_layer
	# filter_mouse = all
	alwaystransparent = no
	parentanchor = bottom|left
	allow_outside = yes

	# using = Window_Background_Sidebar
	# using = Window_Decoration
	using = Window_Movable

	# background = {
    #     texture = "gfx/interface/skinned/button_hud_character_bar.dds"
    #     spriteType = Corneredtiled
    #     spriteborder = { 18 0 }
    #     texture_density = 2

    #     modify_texture = {
    #         texture = "gfx/interface/component_overlay/overlay_effect.dds"
    #         blend_mode = overlay
    #     }

    #     block "bg_margins"
    #     {
    #         margin = { -23 -17 }
    #     }
    # }

	hbox = {
		flowcontainer = {
			ignoreinvisible = yes
			datamodel = "[GetPlayer.MakeScope.GetList('BMU_stakeholder_stories')]"
			item = {
				button_normal = {
					# allow_outside = yes
					datacontext = "[Scope.Var('pressed_claim_story').Story]"
					datacontext = "[Scope.Var('pressed_claim_story').Var('claimed_title').Title]"
					
					size = { 60 60 }

					icon = {
						texture = "gfx/interface/buttons/button_lifestyles_base.dds"
						size = { 100% 100% }
					}
					
					progresspie = {
						name = "progress"
						size = { 60 60 }
						texture = "gfx/interface/progressbars/action_progress_thin.dds"
						framesize = { 124 124 }
						frame = 2
						widgetanchor = top|hcenter
						parentanchor = top|hcenter
						value = "[Story.MakeScope.ScriptValue('FF_pressed_claim_story_duration')]"
						min = 0
						max = 1
					}

					icon = {
						name = "progress_frame"
						texture = "gfx/interface/icons/BMU_action_progress_frame.dds"
						size = { 100% 100% }
						parentanchor = center
						alpha = 0.5
					}
					
					coa_title_tiny_crown = {
						parentanchor = center
						blockoverride "coa_button"
						{
							onclick = "[GetVariableSystem.SetOrToggle('BMU_claim_window',Scope.Var('pressed_claim_story').Var('claimed_title').Title.GetKey)]"
						}
					}

					# icon_doctrine = {
					# 	# visible = "[EqualTo_string(Scope.Var('status').GetFlagName,'dropout')]"
					# 	position = { 0 -10 }
					# 	size = { 25 25 }
					# 	texture = "gfx/interface/icons/press_claim_status.dds"
					# 	framesize = { 70 70 }
					# 	frame = 2
					# 	parentanchor = top|center
					# }
				}
			}
		}
	}
}

types BMU_Lists {
	type BMU_widget_character_list_item = widget {
		parentanchor = left
		# datacontext = "[Scope.Char]"
		size = { 10 110 }

		block "divider" {
			divider = {
				parentanchor = bottom|hcenter
				size = { 100% 3 }
			}
		}

		block "widget" {}

		hbox = {
			margin = { 0 5 }
			spacing = 15

			portrait_head_small = {
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					# Name and age
					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						margin_left = 10

						text_single = {
							layoutpolicy_horizontal = expanding
							using = Font_Size_Medium
							autoresize = no
							alwaystransparent = yes

							text = "[Character.GetUINameNoTooltip]"
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							using = character_age_or_death_text
							blockoverride "list_layout" {}

							block "character_relation"
							{
								text_single = {
									name = "character_relation"
									layoutpolicy_horizontal = expanding
									raw_text = "|  [Character.GetRelationToString( GetPlayer )]"
									tooltip = "EXTENDED_RELATIONS_TOOLTIP"
									default_format = "#low"
									autoresize = no
									align = nobaseline
									visible = "[Character.HasRelationTo( GetPlayer )]"
									alwaystransparent = yes
								}

								expand = {
									visible = "[Not(Character.HasRelationTo( GetPlayer ))]"
								}
							}
						}
					}

					# Dynasty
					hbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						margin_left = 5

						widget = {
							size = { 45 60 }

							coa_house_small = {
								datacontext = "[Character.GetHouse]"
								scale = 0.7
							}
						}

						# Traits

						# fixedgridbox = {
						# 	name = "traits_grid"
						# 	datamodel = "[CharacterListItem.GetTraits]"
						# 	flipdirection = yes
						# 	size = { 150 60 }
						# 	addcolumn = 30
						# 	addrow = 45
						# 	maxhorizontalslots = 8
						# 	maxverticalslots = 1

						# 	item = {
						# 		container = {
						# 			visible = "[Trait.IsValid]"

						# 			icon_trait = {
						# 				blockoverride "icon_size"
						# 				{
						# 					size = { 30 30 }
						# 				}

						# 				blockoverride "tooltip_placement"
						# 				{
						# 					using = tooltip_se
						# 				}

						# 				blockoverride "glow_radius"
						# 				{
						# 					glow_radius = 3
						# 				}
						# 			}
						# 		}
						# 	}
						# }

						block "bottom_middle_box" {
							expand  = {}
						}

						# text_single = {
						# 	text = "[Character.MakeScope.ScriptValue('gui_BMU_contender_score')]"
						# 	tooltip = "[Character.MakeScope.GetScriptValueDesc('gui_BMU_contender_score')]"
						# }

						# spacer = {
						# 	size = { 10 0 }
						# }

						# text_single = {
						# 	text = "[ROOT.Char.GetNameNoTooltip]"
						# }

						# text_single = {
						# 	text = "[GuiScope.SetRoot(Character.MakeScope).AddScope('candidate',Character.MakeScope).AddScope('story',Story.MakeScope).ScriptValue('gui_BMU_contender_score')]"
						# 	tooltip = "[GuiScope.SetRoot(Character.MakeScope).AddScope('candidate',Character.MakeScope).AddScope('story',Story.MakeScope).GetScriptValueDesc('gui_BMU_contender_score')]"
						# }
					}
				}

				expand = {}

				vbox = {
					minimumsize = { 200 0 }
					# datacontext = "[CharacterListItem.GetCharacter]"
					layoutpolicy_vertical = expanding
					margin_top = 5
					margin_right = 5

					# Skills
					hbox = {
						name = "skills_grid"
						layoutpolicy_horizontal = expanding

						expand = {}

						hbox = {
							widget = {
								size = { 32 25 }

								text_single = {
									name = "value"
									parentanchor = center
									margin_bottom = 4
									align = center
									text = "[Character.MakeScope.ScriptValue('gui_diplomacy')]"
									tooltip = "[SkillItem.GetName]"
								}

								background = {
									name = "skill_icon_bg"
									texture = "gfx/interface/window_character/character_view_skills_bg.dds"
									framesize = { 70 26 }
									margin = { 5 0 }

									block "bg"
									{
										frame = 1
									}
								}

							}
							widget = {
								size = { 32 25 }

								text_single = {
									name = "value"
									parentanchor = center
									margin_bottom = 4
									align = center
									text = "[Character.MakeScope.ScriptValue('gui_martial')]"
									tooltip = "[SkillItem.GetName]"
								}

								background = {
									name = "skill_icon_bg"
									texture = "gfx/interface/window_character/character_view_skills_bg.dds"
									framesize = { 70 26 }
									margin = { 5 0 }

									block "bg"
									{
										frame = 2
									}
								}

							}
							widget = {
								size = { 32 25 }

								text_single = {
									name = "value"
									parentanchor = center
									margin_bottom = 4
									align = center
									text = "[Character.MakeScope.ScriptValue('gui_stewardship')]"
									tooltip = "[SkillItem.GetName]"
								}

								background = {
									name = "skill_icon_bg"
									texture = "gfx/interface/window_character/character_view_skills_bg.dds"
									framesize = { 70 26 }
									margin = { 5 0 }

									block "bg"
									{
										frame = 3
									}
								}

							}
							widget = {
								size = { 32 25 }

								text_single = {
									name = "value"
									parentanchor = center
									margin_bottom = 4
									align = center
									text = "[Character.MakeScope.ScriptValue('gui_intrigue')]"
									tooltip = "[SkillItem.GetName]"
								}

								background = {
									name = "skill_icon_bg"
									texture = "gfx/interface/window_character/character_view_skills_bg.dds"
									framesize = { 70 26 }
									margin = { 5 0 }

									block "bg"
									{
										frame = 4
									}
								}

							}
							widget = {
								size = { 32 25 }

								text_single = {
									name = "value"
									parentanchor = center
									margin_bottom = 4
									align = center
									text = "[Character.MakeScope.ScriptValue('gui_learning')]"
									tooltip = "[SkillItem.GetName]"
								}

								background = {
									name = "skill_icon_bg"
									texture = "gfx/interface/window_character/character_view_skills_bg.dds"
									framesize = { 70 26 }
									margin = { 5 0 }

									block "bg"
									{
										frame = 5
									}
								}

							}
						}
					}

					expand = {}

					block "bottom_right_box"
					{
						hbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							# Realm
							widget = {
								size = {55 58 }
								# visible = "[Not( IsDataModelEmpty( Character.GetTitles ) )]"

								block "claims_visibility" {}

								datacontext = "[Scope.Var('pressed_claim_story').Var('claimed_title').Title]"

								coa_title_tiny_crown = {
									using = tooltip_ne
									

									highlight_icon = {
										name = "pressed_claim"
										visible = "[GetScriptedGui('BMU_has_strong_claim').IsShown(GuiScope.SetRoot(Character.MakeScope).AddScope('title',Title.MakeScope).End)]"
										texture = "gfx/interface/icons/title_status/icon_claim_pressed.dds"
										size = { 24 24 }
										parentanchor = bottom|right
									}

									highlight_icon = {
										name = "unpressed_claim"
										visible = "[GetScriptedGui('BMU_has_weak_claim').IsShown(GuiScope.SetRoot(Character.MakeScope).AddScope('title',Title.MakeScope).End)]"
										texture = "gfx/interface/icons/title_status/icon_claim_unpressed.dds"
										size = { 24 24 }
										parentanchor = bottom|right
									}

									highlight_icon = {
										name = "implicit_claim"
										visible = "[GetScriptedGui('BMU_has_implicit_claim').IsShown(GuiScope.SetRoot(Character.MakeScope).AddScope('title',Title.MakeScope).End)]"
										texture = "gfx/interface/icons/title_status/icon_claim_implicit.dds"
										size = { 24 24 }
										parentanchor = bottom|right
									}

									blockoverride "coa_tooltip"
									{
										
									}
								}

								# text_single = {
								# 	align = right
								# 	minimumsize = { 15 0 }
								# 	parentanchor = vcenter|right
								# 	text = "[CharacterListItem.GetTitleItemCount]"
								# 	tooltip = "CHARACTER_LIST_CLAIM_TOOLTIP"
								# }
							}

							expand = {}

							# Religion
							icon = {
								name = "faith_button"
								size = { 35 35 }
								datacontext = "[Character.GetFaith]"
								tooltipwidget = { faith_tooltip = {} }
								texture = "[Faith.GetIcon]"
							}

							widget = {
								datacontext = "[Character.GetCulture]"
								size = { 120 24 }

								tooltipwidget = {
									culture_tooltip = {}
								}
								using = tooltip_se

								hbox = {
									spacing = 3

									icon = {
										name = "culture"
										texture = "gfx/interface/icons/icon_culture.dds"
										size = { 24 24 }
									}

									text_multi = {
										layoutpolicy_horizontal = expanding
										min_width = 95
										max_width = 95
										autoresize = yes
										text = "CULTURE_LISTS_WINDOW"
									}
								}
							}
						}
					}
				}

				
			}

			# button_standard = {
			# 	layoutpolicy_horizontal = expanding
			# 	layoutpolicy_vertical = expanding

			# 	# onclick = "[CharacterListItem.OnClick('character')]"
			# 	# enabled = "[CharacterListItem.IsSelectable]"
			# 	# tooltip = "[CharacterListItem.GetUnselectableReason]"

			# 	framesize = { 249 78 }
			# 	spriteType = Corneredtiled
			# 	spriteborder = { 20 20 }
			# 	texture = "gfx/interface/buttons/button_entry_characterlist.dds"

			# 	block "button" {}

			# 	character_list_arrow = {
			# 		name = "character_list_arrow"
			# 	}

			# 	block "overlay" {
			# 		using = default_character_list_overlay
			# 	}

			# 	block "button_content"
			# 	{
					
			# 	}
			# }
		}
	}
}

types BMU_portraits {
	 type portrait_torso_small = widget {
        size = { 200 200 }

        widget = {
            size = { 100% 100% }
            using = Portrait_Background_Glows
        }

        portrait_button = {
            parentanchor = bottom|hcenter
            size = { 200 200 }
            using = portrait_base

            block "portrait_texture"
            {
                portrait_texture = "[Character.GetPortrait('environment_torso', 'camera_torso', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
            }
            mask = "gfx/portraits/portrait_mask_torso.dds"
            effectname = "NoHighlight"

            highlight_icon = {
                name = "prison_bars"
                visible = "[Character.IsImprisoned]"
                size = { 100% 100% }
                effectname = "NoHighlight"
                texture = "gfx/portraits/portrait_prison_torso.dds"

                modify_texture = {
                    name = "mask"
                    texture = "gfx/portraits/portrait_mask_torso.dds"
                    spriteType = Corneredstretched
                    blend_mode = alphamultiply
                }
            }

            block "portrait_button" {}
        }

        portrait_status_icons = {
            parentanchor = bottom|left
            position = { 43 -6 }
            scale = 0.85

            background = {
                using = Background_Area_Dark
                margin = { 2 3 }
                alpha = 0.8
            }
        }

        block "coa" {
            coa_realm_small_crown = {
                visible = "[Character.HasLandedTitles]"
                parentanchor = bottom|left
                position = { -2 1 }
            }
        }

        block "opinion_box"
        {
            portrait_opinion = {
                parentanchor = bottom|hcenter
                position = { 4 -2 }
            }
        }

        #portrait unknown glow
        button = {
            name = "portrait_unknown_torso_glow"
            parentanchor = center
            position = { 0 -12 }
            gfxtype = framedbuttongfx
            effectname = "NoHighlight"
            texture = "gfx/portraits/unknown_portraits/button_unknown.dds"
            size = { 195 225 }
            framesize = { 554 780 }
            upframe = 1
            overframe = 2

            block "glow_visible" {

                visible = "[Not(Character.IsValid)]"

            }

            block "glow_flip" {}

            block "onclick" {}
        }
    }
}

template BMU_support_score_tooltip {
	container = {
		alwaystransparent = no

		widget = {
			name = "background"
			using = Background_Tooltip
			size = { 100% 100% }
			alwaystransparent = no
		}

		container = {
			# visible = "[And( Title.CanCharacterControlVote(Character.Self), SuccessionElectionWindow.GetTitle.GetPlayerNominee.IsValid )]"

			flowcontainer = {
				visible = "[Not(Character.IsPlayer)]"
				direction = vertical
				margin = { 10 10 }
				ignoreinvisible = yes
				
				flowcontainer = {
					direction = horizontal
					ignoreinvisible = yes
					#Claim Target
					flowcontainer = {
						visible = "[Not(ObjectsEqual(Scope.Var('contender').Var('stakeholder').Char,Story.MakeScope.Var('pressed_claim_story').Var('claim_target').Char))]"
						margin = { 10 5 }
						direction = vertical

						background = {
							using = Background_Area
						}

						text_multi = {
							autoresize = yes
							minimumsize = { 250 -1 }
							maximumsize = { 250 -1 }
							multiline = yes
							text = "BMU_CLAIM_WINDOW_SUPPORT_BREAKDOWN_TARGET_TT"
							# text = "[Story.MakeScope.Var('pressed_claim_story').Var('claim_target').Char.GetShortUIName]"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}

						text_multi = {
							autoresize = yes
							minimumsize = { 250 -1 }
							maximumsize = { 350 -1 }
							multiline = no
							fonttintcolor = "[TooltipInfo.GetTintColor]"
							text = "[GuiScope.SetRoot(Character.MakeScope).AddScope('pressed_claim',Story.MakeScope.Var('pressed_claim_story').Story.MakeScope).AddScope('claim_target',Story.MakeScope.Var('pressed_claim_story').Var('claim_target').Char.MakeScope).AddScope('claimed_title',Story.MakeScope.Var('pressed_claim_story').Var('claimed_title').Title.MakeScope).AddScope('gui_candidate',Story.MakeScope.Var('pressed_claim_story').Var('claim_target').Char.MakeScope).GetScriptValueDesc('gui_BMU_contender_score')]"
						}
					}

					# widget = {
					# 	visible = "[Not( SuccessionElectionWindowElector.IsVoteForPlayer )]"
					# 	size = { 5 0 }
					# }
					#Contender
					flowcontainer = {
						visible = "[Scope.Var('contender').IsSet]"
						margin = { 10 5 }
						direction = vertical

						background = {
							using = Background_Area
						}

						text_multi = {
							autoresize = yes
							minimumsize = { 250 -1 }
							maximumsize = { 250 -1 }
							multiline = yes
							text = "BMU_CLAIM_WINDOW_SUPPORT_BREAKDOWN_SUPPORTER_TT"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}

						text_multi = {
							autoresize = yes
							minimumsize = { 250 -1 }
							maximumsize = { 350 -1 }
							multiline = yes
							fonttintcolor = "[TooltipInfo.GetTintColor]"
							text = "[GuiScope.SetRoot(Character.MakeScope).AddScope('pressed_claim',Story.MakeScope.Var('pressed_claim_story').Story.MakeScope).AddScope('claim_target',Story.MakeScope.Var('pressed_claim_story').Var('claim_target').Char.MakeScope).AddScope('claimed_title',Story.MakeScope.Var('pressed_claim_story').Var('claimed_title').Title.MakeScope).AddScope('gui_candidate',Scope.Var('contender').Var('stakeholder').Char.MakeScope).AddScope('actor',Scope.Var('contender').Var('stakeholder').Char.MakeScope).GetScriptValueDesc('gui_BMU_contender_score')]"
						}
					}
					#Player Pick
					flowcontainer = {
						visible = "[And(Not(ObjectsEqual(Scope.Var('contender').Var('stakeholder').Char,Story.MakeScope.Var('contender').Var('stakeholder').Char)),Not(ObjectsEqual(Story.MakeScope.Var('pressed_claim_story').Var('claim_target').Char,GetPlayer.Self)))]"
						margin = { 10 5 }
						direction = vertical

						background = {
							using = Background_Area
						}

						text_multi = {
							autoresize = yes
							minimumsize = { 250 -1 }
							maximumsize = { 250 -1 }
							multiline = yes
							text = "BMU_CLAIM_WINDOW_SUPPORT_BREAKDOWN_PLAYER_CANDIDATE_TT"
							fonttintcolor = "[TooltipInfo.GetTintColor]"
						}

						text_multi = {
							autoresize = yes
							minimumsize = { 250 -1 }
							maximumsize = { 350 -1 }
							multiline = yes
							fonttintcolor = "[TooltipInfo.GetTintColor]"
							text = "[GuiScope.SetRoot(Character.MakeScope).AddScope('pressed_claim',Story.MakeScope.Var('pressed_claim_story').Story.MakeScope).AddScope('claim_target',Story.MakeScope.Var('pressed_claim_story').Var('claim_target').Char.MakeScope).AddScope('claimed_title',Story.MakeScope.Var('pressed_claim_story').Var('claimed_title').Title.MakeScope).AddScope('gui_candidate',Story.MakeScope.Var('contender').Var('stakeholder').Char.MakeScope).GetScriptValueDesc('gui_BMU_contender_score')]"
						}
					}
					#Top Candidate
				}

				# text_multi = {
				# 	margin = { 5 0 }
				# 	visible = "[SuccessionElectionWindow.CouldVoteForPlayerCandidateInstead( Character.Self )]"
				# 	text = "SUCCESSION_ELECTION_WINDOW_VOTE_BREAKDOWN_PLAYER_NOMINEE_INFO"
				# 	autoresize = no
				# 	max_width = 520
				# 	size = { 100% 50 }
				# 	fonttintcolor = "[TooltipInfo.GetTintColor]"
				# }
			}

			# text_multi = {
			# 	visible = "[Character.IsOtherPlayer]"

			# 	margin = { 10 5 }
			# 	align = left|nobaseline
			# 	autoresize = yes
			# 	minimumsize = { 270 -1 }
			# 	maximumsize = { 270 -1 }

			# 	text = "SUCCESSION_ELECTION_WINDOW_VOTE_BREAKDOWN_IS_OTHER_PLAYER"
			# 	fonttintcolor = "[TooltipInfo.GetTintColor]"
			# }

			# text_multi = {
			# 	visible = "[Character.IsLocalPlayer]"

			# 	margin = { 10 5 }
			# 	align = left|nobaseline
			# 	autoresize = yes
			# 	minimumsize = { 270 -1 }
			# 	maximumsize = { 270 -1 }
			# 	text = "SUCCESSION_ELECTION_WINDOW_VOTE_BREAKDOWN_IS_LOCAL_PLAYER"
			# 	fonttintcolor = "[TooltipInfo.GetTintColor]"
			# }
		}

		# text_multi = {
		# 	visible = "[Not( Title.CanCharacterControlVote( Character.Self ) )]"

		# 	margin = { 10 5 }
		# 	align = left|nobaseline
		# 	autoresize = yes
		# 	minimumsize = { 270 -1 }
		# 	maximumsize = { 270 -1 }
		# 	text = "SUCCESSION_ELECTION_WINDOW_VOTE_BREAKDOWN_FORCED_VOTE"
		# 	fonttintcolor = "[TooltipInfo.GetTintColor]"
		# }

		# text_single = {
		# 	visible = "[Not(Or(EqualTo_string(Scope.Var('status').GetFlagName,'contender'),EqualTo_string(Scope.Var('status').GetFlagName,'supporter')))]"
		# 	margin = { 10 10 }
		# 	text = "SUCCESSION_ELECTION_WINDOW_NO_PLAYER_NOMINEE"
		# }
	}
}

template BMU_stakeholder_ambition_tooltip {
	container = {
		
		widget = {
			name = "background"
			using = Background_Tooltip
			size = { 300 900 }
			alwaystransparent = no
		}

		container = {
			flowcontainer = {
				direction = vertical
				margin = { 10 10 }
				ignoreinvisible = yes
				vbox = {
					size = { 300 900 }
					datamodel = "[Scope.GetList('BMU_stakeholder_ambitions')]"
					item = {
						vbox = {
							hbox = {
								visible = "[EqualTo_string(Scope.Var('ambition').GetFlagName,'FF_ambition_get_title')]"
								datacontext = "[Scope.Var('coveted_title').Title]"
								coa_title_tiny_crown ={}
								text_single = {
									text = "[Scope.Var('ambition_score').GetValue|0]"
								}
							}
							hbox = {
								visible = "[EqualTo_string(Scope.Var('ambition').GetFlagName,'FF_ambition_get_child_title')]"
								datacontext = "[Scope.Var('child').Char]"
								portrait_head_small = {}
								text_single = {
									text = "[Scope.Var('ambition_score').GetValue|0]"
								}
							}
							hbox = {
								visible = "[EqualTo_string(Scope.Var('ambition').GetFlagName,'FF_ambition_get_gold')]"
								datacontext = "[Scope.Var('child').Char]"
								icon = {
									name = "gold_icon"
									size = { 30 30 }
									texture = "gfx/interface/icons/icon_gold.dds"
								}
								text_single = {
									text = "[Scope.Var('ambition_score').GetValue|0]"
								}
							}
							hbox = {
								visible = "[EqualTo_string(Scope.Var('ambition').GetFlagName,'FF_ambition_get_council_position')]"
								# datacontext = "[Scope.Var('child').Char]"
								icon = {
									visible = "[EqualTo_string(Scope.Var('council_position').GetFlagName,'chancellor')]"
									size = { 30 30 }
									framesize = { 60 60 }
									frame = 1
									texture = "gfx/interface/icons/icon_skills.dds"
								}
								icon = {
									visible = "[EqualTo_string(Scope.Var('council_position').GetFlagName,'steward')]"
									size = { 30 30 }
									framesize = { 60 60 }
									frame = 3
									texture = "gfx/interface/icons/icon_skills.dds"
								}
								icon = {
									visible = "[EqualTo_string(Scope.Var('council_position').GetFlagName,'marshal')]"
									size = { 30 30 }
									framesize = { 60 60 }
									frame = 2
									texture = "gfx/interface/icons/icon_skills.dds"
								}
								icon = {
									visible = "[EqualTo_string(Scope.Var('council_position').GetFlagName,'spymaster')]"
									size = { 30 30 }
									framesize = { 60 60 }
									frame = 4
									texture = "gfx/interface/icons/icon_skills.dds"
								}
								text_single = {
									text = "[Scope.Var('ambition_score').GetValue|0]"
								}
							}
						}
					}
				}
			}
		}
	}
}

template BMU_claim_window_clear_system_variables
{
	onclick = "[GetVariableSystem.Clear('coveted_title')]"
	onclick = "[GetScriptedGui('BMU_clear_bargain').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
	onclick = "[GetScriptedGui('BMU_bargain_for_contender_clear').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
	onclick = "[GetVariableSystem.Clear('bargain_with')]"
	onclick = "[GetVariableSystem.Clear('bargain_for')]"
}

types BMU_bargains {
	type BMU_bargain_buttons = hbox {
		block "BMU_bargain_title" {
			button = {
				# visible = "[GetScriptedGui('BMU_ambition_get_title').IsShown(GuiScope.SetRoot(Scope.Story.MakeScope).AddScope('contender',GetPlayer.MakeScope).End)]"
				enabled = "[GetScriptedGui('BMU_ambition_get_title').IsValid(GuiScope.SetRoot(Scope.Story.MakeScope).AddScope('contender',GetPlayer.MakeScope).End)]"
				texture = "gfx/interface/icons/message_feed/titles.dds"
				size = { 50 50 }
				tooltipwidget = BMU_stakeholder_ambition_tooltip
				using = BMU_claim_window_clear_system_variables
				block "BMU_bargain_title_behavior" {
					onclick = "[GetVariableSystem.Set('bargain_with','FF_ambition_get_title')]"
					onclick = "[GetVariableSystem.Set('ambitions_target',Scope.Var('stakeholder').Char.GetPrimaryTitle.GetKey)]"
				}
			}
		}
		block "BMU_bargain_title_child" {
			icon = {
				texture = "gfx/interface/icons/ambition_get_child_title.dds"
				size = { 50 50 }
				tooltipwidget = BMU_stakeholder_ambition_tooltip
				block "BMU_bargain_title_child_behavior" {
				}
			}
		}
		block "BMU_bargain_council_position" {
			button = {
				enabled = "[GetScriptedGui('BMU_bargain_with_council_position').IsValid(GuiScope.SetRoot(Scope.Story.MakeScope).AddScope('contender',GetPlayer.MakeScope).End)]"
				texture = "gfx/interface/icons/message_feed/council.dds"
				size = { 50 50 }
				tooltipwidget = BMU_stakeholder_ambition_tooltip
				using = BMU_claim_window_clear_system_variables
				block "BMU_bargain_council_position_behavior" {
					onclick = "[GetVariableSystem.Set('bargain_with','FF_ambition_get_council_position')]"
					onclick = "[GetVariableSystem.Set('ambitions_target',Scope.Var('stakeholder').Char.GetPrimaryTitle.GetKey)]"
				}
			}
		}
		block "BMU_bargain_gold" {
			icon = {
				texture = "gfx/interface/icons/icon_gold.dds"
				size = { 50 50 }
				tooltipwidget = BMU_stakeholder_ambition_tooltip
				block "BMU_bargain_gold_behavior" {
				}
			}
		}
	}
}
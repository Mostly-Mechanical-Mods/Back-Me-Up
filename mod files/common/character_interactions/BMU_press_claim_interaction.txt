BMU_press_claim_interaction = {
	category = interaction_category_pressed_claim
	use_diplomatic_range = no
	common_interaction = yes
	ignores_pending_interaction_block = yes
	interface_priority = -1
	icon = icon_claim_pressed

	is_highlighted = {
		scope:recipient = {
			any_pressed_claim = {
				scope:actor = { has_claim_on = prev.var:claimed_title }
			}
		}
	}

	desc = BMU_press_claim_interaction

	# auto_accept = yes

	popup_on_receive = yes
	pause_on_receive = yes
	ignores_pending_interaction_block = no
	show_answer_notification = no

	greeting = negative
	notification_text = BMU_press_claim_interaction_notification
	prompt = test

	target_type = title
	target_filter = recipient_domain_titles

	cooldown_against_recipient = { years = 1 }

	redirect = {
	}

	is_shown = {
		scope:actor = {
			is_claimant = yes
			has_cb_on = { target = scope:recipient cb = claim_cb }
		}
	}
	
	is_valid_showing_failures_only = {
		scope:actor = {
			custom_description = {
				text = BMU_involved_in_another_pressed_claim
				subject = this
				any_contender_story = {
					count = 0
				}
			}
		}
	}

	has_valid_target_showing_failures_only = {
		scope:actor = {
			any_claim = {
				save_temporary_scope_as = claim
				trigger_if = {
					limit = { has_variable = pressed_claim }
					NOR = {
						custom_tooltip = {
							text = BMU_too_late_to_join_pressed_claim
							var:pressed_claim = {
								OR = {
									var:phase = declaration_phase
									var:phase = war_phase
								}
							}
						}
						custom_description = {
							text = BMU_already_involved_in_pressed_claim
							scope:actor = {
								any_owned_story = {
									story_type = BMU_stakeholder_story
									var:pressed_claim_story.var:claimed_title = scope:claim
								}
							}
						}
					}
				}
			}
		}
	}

	can_be_picked_title = {
		OR = {
			scope:actor = { has_claim_on = scope:target }
			AND = {
				exists = scope:target.holder
				scope:actor = { is_heir_of = scope:target.holder }
			}
		}
		scope:target = {
			trigger_if = {
				limit = { has_variable = pressed_claim }
				NOR = {
					custom_tooltip = {
						text = BMU_too_late_to_join_pressed_claim
						var:pressed_claim = {
							OR = {
								var:phase = declaration_phase
								var:phase = war_phase
							}
						}
					}
					custom_description = {
						text = BMU_already_involved_in_pressed_claim
						scope:actor = {
							any_owned_story = {
								story_type = BMU_stakeholder_story
								var:pressed_claim_story.var:claimed_title = scope:claim
							}
						}
					}
				}
			}
		}
	}

	can_send = {
	}

	options_heading = BMU_bargain_council_position_interaction_option
	

	on_send = {
	}
	
	on_accept = {
		if = {
			limit = { debug_only = yes }
			debug_log = "BMU_press_claim_interaction"
			debug_log_scopes = yes
		}

		scope:actor = { save_scope_as = claimant }
		scope:recipient = { save_scope_as = claim_target }

		BMU_interaction_press_claim = yes
	}

	ai_potential = { is_claimant = yes has_title = title:k_lotharingia }

	ai_targets = {
		ai_recipients = scripted_relations
	}

	ai_frequency = 1

	ai_will_do = {
		base = 0
		modifier = {
			trigger_if = {
				limit = { NOT = { exists = scope:target }}
				scope:actor.var:BMU_press_claim_interaction_AI = { save_temporary_scope_as = target }
			}
			scope:target.holder = { save_temporary_scope_as = candidate }
			save_temporary_scope_value_as = {
				name = actor_score
				value = BMU_contender_score
			}
			add = 0
		}
		BMU_bargain_title = yes
		modifier = {
			scope:target = title:k_france
			add = 10000000
		}
	}
}

BMU_press_claim_interaction_script = {
	category = interaction_category_pressed_claim
	use_diplomatic_range = no
	common_interaction = yes
	ignores_pending_interaction_block = yes
	interface_priority = -1
	icon = icon_claim_pressed

	desc = BMU_press_claim_interaction

	# auto_accept = yes

	popup_on_receive = yes
	pause_on_receive = yes
	ignores_pending_interaction_block = no
	show_answer_notification = yes

	greeting = negative
	notification_text = BMU_press_claim_interaction_notification_script
	prompt = test

	cooldown_against_recipient = { years = 1 }

	redirect = {
	}

	is_shown = {
		scope:actor = {
			custom_tooltip = {
				text = debug_1
				is_ai = yes
			}
			custom_tooltip = {
				text = debug_1
				has_variable = BMU_press_claim_interaction_script
			}
		}
	}
	
	is_valid_showing_failures_only = {
		custom_tooltip = {
			text = debug_3
			exists = scope:actor.var:BMU_press_claim_interaction_script
		}
		custom_tooltip = {
			text = debug_4
			OR = {
				scope:recipient = scope:actor.var:BMU_press_claim_interaction_script.holder.top_liege
				scope:recipient = scope:actor.var:BMU_press_claim_interaction_script.holder
			}
		}
	}

	can_send = {
		scope:actor = {
			custom_tooltip = {
				text = debug_5
				is_ai = yes
			}
			custom_tooltip = {
				text = debug_6
				has_variable = BMU_press_claim_interaction_script
			}
		}
	}
	

	on_send = {
		scope:actor.var:BMU_press_claim_interaction_script = { save_scope_as = target }
		scope:actor = { save_scope_as = claimant }
		scope:recipient = { save_scope_as = claim_target }

		scope:actor = { remove_variable = BMU_press_claim_interaction_script}
	}
	
	on_accept = {
		if = {
			limit = { debug_only = yes }
			debug_log = "BMU_press_claim_interaction_script"
			debug_log_scopes = yes
		}

		BMU_interaction_press_claim = yes
	}

}

# BMU_press_claim_interaction_AI_evaluate = {
# 	category = interaction_category_pressed_claim
# 	use_diplomatic_range = no
# 	common_interaction = yes
# 	ignores_pending_interaction_block = yes
# 	interface_priority = -1
# 	icon = icon_claim_pressed

# 	desc = BMU_press_claim_interaction

# 	auto_accept = no

# 	popup_on_receive = yes
# 	pause_on_receive = no
# 	ignores_pending_interaction_block = yes

# 	cooldown_against_recipient = { years = 1 }

# 	redirect = {
# 	}

# 	is_shown = {
# 		scope:actor = { has_variable = BMU_press_claim_interaction_AI }
# 	}
	
# 	is_valid_showing_failures_only = {
# 		scope:actor = {
# 			is_claimant = yes
# 			OR = {
# 				has_strong_claim_on = var:BMU_press_claim_interaction_AI
# 				has_weak_claim_on = var:BMU_press_claim_interaction_AI
# 			}
# 			custom_description = {
# 				text = BMU_involved_in_another_pressed_claim
# 				subject = this
# 				any_contender_story = {
# 					count = 0
# 				}
# 			}
# 		}
# 	}

# 	can_send = {
# 		scope:actor = { has_variable = BMU_press_claim_interaction_AI }
# 	}

# 	options_heading = BMU_bargain_council_position_interaction_option
	

# 	on_send = {
# 		scope:actor.var:BMU_press_claim_interaction_AI = { save_scope_as = target }
# 	}
	
# 	on_accept = {
# 		scope:actor.var:BMU_press_claim_interaction_AI = { save_scope_as = target }
# 		scope:actor = { save_scope_as = claimant }
# 		scope:actor.var:BMU_press_claim_interaction_AI.holder = { save_scope_as = claim_target }

# 		if = {
# 			limit = { debug_only = yes }
# 			debug_log = "BMU_press_claim_interaction_AI"
# 			debug_log_scopes = yes
# 		}
# 		BMU_interaction_press_claim = yes
# 	}

# 	ai_targets = {
# 		ai_recipients = self
# 		ai_frequency = 360
# 	}

# 	ai_accept = {
# 		base = 0
# 		modifier = {
# 			trigger_if = {
# 				limit = { NOT = { exists = scope:target }}
# 				scope:actor.var:BMU_press_claim_interaction_AI = { save_temporary_scope_as = target }
# 			}
# 			scope:target.holder = { save_temporary_scope_as = candidate }
# 			save_temporary_scope_value_as = {
# 				name = actor_score
# 				value = BMU_contender_score
# 			}
# 			add = 0
# 		}
# 		BMU_bargain_title = yes
# 	}
# }
BMU_create_claim_press = {
	debug_log = "BMU_create_claim_press"
	if = {
		limit = {
			exists = $TARGET$
			exists = $TARGET_TITLE$
			exists = $CONTENDER$
			exists = $UNWILLING_CONTENDER$
		}
	}
	
	$TARGET$ = { save_scope_as = claim_target }
	$TARGET_TITLE$ = { save_scope_as = claimed_title }
	$CONTENDER$ = { save_scope_as = contender }
	$UNWILLING_CONTENDER$ = { save_scope_as = unwilling_contender }

	scope:claim_target = { debug_log = "claim_target [THIS.Char.GetNameNoTooltip]" }
	scope:claimed_title = { debug_log = "claimed_title [THIS.Title.GetNameNoTooltip]" }
	scope:contender = { debug_log = "contender [THIS.Char.GetNameNoTooltip]" }
	scope:unwilling_contender = { debug_log = "unwilling_contender [THIS.Char.GetNameNoTooltip]" }

	scope:claim_target = {
		create_story = {
			type = BMU_pressed_claim_story
			save_scope_as = story
		}
	}

	add_to_global_variable_list = {
		name = BMU_claim_stories
		target = scope:story
	}

	scope:story = {
		debug_log = story
		debug_log_scopes = no
		set_variable = contention_phase
		set_variable = {
			name = pressed_claim_phase
			value = flag:contention_phase
		}
		set_variable = { name = claimed_title value = scope:claimed_title }
		set_variable = { name = claim_target value = scope:claim_target }

		story_owner = {
			add_to_variable_list = {
				name = claimed_titles
				target = scope:story
			}
			add_to_list = claimants
		}
		var:claimed_title = {
			every_claimant = {
				explicit = all
				add_to_list = claimants
			}
		}
		
		ordered_in_list = {
			list = claimants
			max = 99
			check_range_bounds = no
			order_by = {
				value = 0
				if = {
					limit = { has_title = scope:claimed_title }
					add = 10000
				}
				if = {
					limit = { has_strong_claim_on = scope:claimed_title }
					add = 1000
				}
				else_if = {
					limit = { has_weak_claim_on = scope:claimed_title }
					add = 900
				}
				else = {
					add = 800
				}
				add = highest_held_title_tier
			}
			
			debug_log_scopes = no
			prev = {
				add_to_variable_list = {
					name = claimants
					target = prev
				}
			}
			create_story = {
				type = BMU_stakeholder_story
				save_scope_as = stakeholder_story
			}
			scope:stakeholder_story = {
				set_variable = {
					name = pressed_claim_story
					value = scope:story
				}
				set_variable = claimant
				set_variable = {
					name = stakeholder
					value = story_owner
				}
			}
			scope:story = {
				add_to_variable_list = {
					name = BMU_pressed_claim_stakeholders
					target = scope:stakeholder_story
				}
			}
			if = {
				limit = {
					scope:contender = this
					scope:contender = scope:unwilling_contender
				}
				BMU_pressed_claim_supporter = {
					PRESSED_CLAIM = scope:story
					CONTENDER = scope:contender
				}
			}
			trigger_event = BMU_pressed_claim.0010

			clear_saved_scope = stakeholder_story
		}
		scope:claim_target = {
			every_targeting_faction = {
				limit = {
					faction_is_type = claimant_faction
					special_title = scope:claimed_title
				}
				every_faction_member = {
					limit = {
						NOT = { this = prev.special_character }
						any_owned_story = {
							story_type = BMU_pressed_claim_stakeholder_story
							var:pressed_claim_story = scope:story
							count = 0
						}
					}
					BMU_create_pressed_claim_stakeholder_story = { PRESSED_CLAIM = scope:story }
					prev.special_character = {
						random_owned_story = {
							limit = {
								story_type = BMU_stakeholder_story
								var:pressed_claim_story = scope:story
							}
							scope:stakeholder_story = {
								set_variable = {
									name = faction_claimant
									value = prev
								}
							}
						}
					}
					BMU_pressed_claim_supporter = {
						PRESSED_CLAIM = scope:story
						CONTENDER = prev.special_character
					}
				}
			}
		}
	}
}

BMU_pressed_claim_supporter = {
	save_scope_as = supporter
	
	$PRESSED_CLAIM$ = { save_scope_as = pressed_claim }
	$PRESSED_CLAIM$.var:claimed_title = { save_scope_as = claimed_title }
	$PRESSED_CLAIM$.var:claim_target = { save_scope_as = claim_target }
	$CONTENDER$ = { save_scope_as = contender }
	
	if = {
		limit = { debug_only = yes }
		debug_log = "BMU_pressed_claim_supporter"
		debug_log_scopes = no
		scope:pressed_claim = { debug_log_scopes = no }
		scope:claimed_title = { debug_log_scopes = no }
		scope:claim_target = { debug_log_scopes = no }
		scope:contender = { debug_log_scopes = no }
	}

	random_owned_story = {
		limit = {
			story_type = BMU_stakeholder_story
			has_variable = pressed_claim_story
			var:pressed_claim_story = scope:pressed_claim
		}
		save_scope_as = stakeholder_story
		# Remove previous Contender + send toast
		if = {
			limit = { has_variable = contender }
			var:contender = {
				remove_list_variable = {
					name = supporters
					target = scope:stakeholder_story
				}
				every_in_list = {
					variable = BMU_bargains
					limit = { var:stakeholder_story.var:stakeholder = scope:supporter }
					remove_variable = bargained
					prev = {
						remove_list_variable = {
							name = BMU_bargains
							target = prev
						}
					}
				}
				var:stakeholder = {
					send_interface_toast = {
						title = BMU_SUPPORTER_LOST
						left_icon = scope:supporter # optional, character, artifact, or title
					}
				}
			}
		}
		# Set new Contender + toast (except if bargain struck, toast already handled)
		if = {
			limit = { NOT = { scope:contender = scope:supporter }}
			set_variable = {
				name = status
				value = flag:supporter
			}
			scope:contender = {
				random_owned_story = {
					limit = {
						story_type = BMU_stakeholder_story
						var:pressed_claim_story = scope:pressed_claim
					}
					scope:stakeholder_story = {
						set_variable = {
							name = contender
							value = prev
						}
					}
					if = {
						limit = { NOT = { scope:contender = scope:supporter }}
						add_to_variable_list = {
							name = supporters
							target = scope:stakeholder_story
						}
					}
				}
				if = {
					limit = { NOT = { exists = scope:bargain }}
					send_interface_toast = {
						title = BMU_SUPPORTER_GAIN
						left_icon = scope:supporter # optional, character, artifact, or title
					}
				}
			}
		}
		else = {
			set_variable = {
				name = status
				value = flag:contender
			}
			set_variable = {
				name = contender
				value = this
			}
		}
	}
	scope:pressed_claim = {
		BMU_pressed_claim_update_top_contender = yes
	}
}

BMU_pressed_claim_stakeholder = {
	save_scope_as = stakeholder
	$PRESSED_CLAIM$ = { save_scope_as = pressed_claim }

	random_owned_story = {
		limit = {
			story_type = BMU_stakeholder_story
			var:pressed_claim_story = scope:pressed_claim
		}
		remove_variable = contender
		set_variable = {
			name = status
			value = flag:stakeholder
		}
	}
	scope:pressed_claim = {
		BMU_pressed_claim_update_top_contender = yes
	}
}

BMU_pressed_claim_dropout = {
	save_scope_as = dropout
	$PRESSED_CLAIM$ = { save_scope_as = pressed_claim }

	random_owned_story = {
		limit = {
			story_type = BMU_stakeholder_story
			var:pressed_claim_story = scope:pressed_claim
		}
		remove_variable = top_candidate
		remove_variable = contender
		set_variable = {
			name = status
			value = flag:dropout
		}
	}
	scope:pressed_claim = {
		BMU_pressed_claim_update_top_contender = yes
	}
}

BMU_pressed_claim_update_top_contender = {
	ordered_in_list = {
		variable = BMU_pressed_claim_stakeholders
		limit = {
			has_variable = status
			var:status = flag:contender
			has_variable = stakeholder
			NOT = { var:stakeholder = scope:claim_target }
		}
		order_by = {
			if = { limit = { story_owner = { save_temporary_scope_as = temp_contender }}}
			prev = {
				every_in_list = {
					variable = BMU_claim_stories
					limit = {
						has_variable = status
						OR = {
							var:status = flag:contender
							var:status = flag:supporter
						}
						has_variable = contender
						var:contender = scope:temp_contender
					}
					add = max_military_strength
				}
			}
		}
		prev = {
			set_variable = {
				name = top_contender
				value = prev.story_owner
			}
		}
	}
}

BMU_create_pressed_claim_stakeholder_story = {
	debug_log = "BMU_create_pressed_claim_stakeholder_story debug"
	debug_log_scopes = no
	save_scope_as = stakeholder
	$PRESSED_CLAIM$ = { save_scope_as = pressed_claim }
	create_story = {
		type = BMU_stakeholder_story
		save_scope_as = stakeholder_story
	}
	scope:stakeholder_story = {
		set_variable = {
			name = pressed_claim_story
			value = scope:pressed_claim
		}
		set_variable = {
			name = story_owner
			value = story_owner
		}
	}
	scope:pressed_claim = {
		add_to_variable_list = {
			name = BMU_pressed_claim_stakeholders
			target = scope:stakeholder_story
		}
		ordered_in_list = {
			variable = BMU_pressed_claim_stakeholders
			limit = {
				has_variable = status
				var:status = flag:contender
				has_variable = stakeholder
				NOT = { var:stakeholder = scope:story.story_owner }
			}
			order_by = { var:stakeholder = { scope:stakeholder = { add = BMU_contender_score }}}
			scope:stakeholder_story = {
				set_variable = {
					name = top_contender
					value = prev
				}
			}
		}
	}

	# Clean-up coveted_titles list
	every_in_list = {
		list = coveted_titles
		remove_from_list = coveted_titles
	}

	# Ambition Get Title
	debug_log = "coveted de_jure"
	every_held_title = {
		every_this_title_or_de_jure_above = {
			add_to_list = coveted_titles
			debug_log_scopes = no
		}
	}
	debug_log = "coveted claim"
	every_claim = {
		limit = { NOT = { holder = scope:stakeholder }}
		add_to_list = coveted_titles
	}
	debug_log = "coveted neighbour"
	every_held_title = {
		limit = { tier > tier_barony }
		if = {
			limit = { tier >= tier_duchy }
			every_in_de_jure_hierarchy = {
				limit = {
					tier = tier_county
					NOT = { holder = scope:stakeholder }
				}
				add_to_list = coveted_titles
			}
		}
		else = {
			every_neighboring_county = {
				limit = { NOT = { holder = scope:stakeholder }}
				add_to_list = coveted_titles
			}
		}
	}
	debug_log = "coveted_titles"
	every_in_list = {
		list = coveted_titles
		limit = {
			save_temporary_scope_as = temp_coveted_title
			scope:stakeholder = { FF_ambition_get_title > 0 }
		}
		save_scope_as = coveted_title
		debug_log_scopes = no
		if = {
			limit = {
				exists = holder
				NOT = { holder = scope:stakeholder }
				holder = {
					any_owned_story = {
						story_type = BMU_stakeholder_story
						var:pressed_claim_story = scope:pressed_claim
						has_variable = status
						var:status = flag:contender
						trigger_if = {
							limit = { prev = var:pressed_claim_story.var:claim_target }
							NOR = {
								scope:coveted_title = var:pressed_claim_story.var:claimed_title
								scope:coveted_title = var:pressed_claim_story.var:claimed_title.title_capital_county
							}
						}
					}
				}
			}
			holder = {
				save_scope_as = coveted_title_holder
				debug_log_scopes = no
			}
		}
		else_if = {
			limit = {
				tier >= tier_duchy
				is_title_created = no
			}
			scope:pressed_claim = {
				random_in_list = {
					variable = BMU_pressed_claim_stakeholders
					limit = {
						has_variable = status
						var:status = flag:contender
						var:stakeholder = {
							any_alert_creatable_title = {
								this = scope:coveted_title
							}
						}
					}
					var:stakeholder = {
						save_scope_as = coveted_title_holder
						debug_log_scopes = no
					}
				}
			}
		}
		if = {
			limit = { exists = scope:coveted_title_holder }
			scope:stakeholder = {
				create_story = {
					type = BMU_ambition_story
					save_scope_as = BMU_stakeholder_ambition
				}
				scope:stakeholder_story = {
					add_to_variable_list = {
						name = BMU_stakeholder_ambitions
						target = scope:BMU_stakeholder_ambition
					}
				}
				scope:BMU_stakeholder_ambition = {
					set_variable = {
						name = pressed_claim_story
						value = scope:pressed_claim
					}
					set_variable = {
						name = stakeholder_story
						value = scope:stakeholder_story
					}
					set_variable = {
						name = story_owner
						value = story_owner
					}
					set_variable = {
						name = ambition
						value = flag:FF_ambition_get_title
					}
					set_variable = {
						name = coveted_title
						value = scope:coveted_title
					}
					set_variable = {
						name = coveted_title_holder
						value = scope:coveted_title_holder
					}
					set_variable = {
						name = ambition_score
						value = { scope:stakeholder = { add = FF_ambition_get_title }}
					}
				}
			}
			clear_saved_scope = coveted_title_holder
		}
	}

	scope:pressed_claim = {
		# every_in_list = {
		# 	variable = BMU_pressed_claim_stakeholders
		# 	limit = {
		# 		has_variable = status
		# 		var:status = flag:contender
		# 	}
		# 	story_owner = {
		# 		every_held_title = {
		# 			limit = {
		# 				tier >= tier_county
		# 				NOT = { this = prev.primary_title }
		# 			}
		# 			save_scope_as = coveted_title
		# 			scope:stakeholder = {
		# 				save_scope_value_as = {
		# 					name = FF_ambition_get_title
		# 					value = FF_ambition_get_title
		# 				}
		# 				if = {
		# 					limit = { scope:FF_ambition_get_title > 0 }
		# 					create_story = {
		# 						type = BMU_ambition_story
		# 						save_scope_as = BMU_stakeholder_ambition
		# 					}
		# 					scope:stakeholder_story = {
		# 						add_to_variable_list = {
		# 							name = BMU_stakeholder_ambitions
		# 							target = scope:BMU_stakeholder_ambition
		# 						}
		# 					}
		# 					scope:BMU_stakeholder_ambition = {
		# 						set_variable = {
		# 							name = pressed_claim_story
		# 							value = scope:pressed_claim
		# 						}
		# 						set_variable = {
		# 							name = stakeholder_story
		# 							value = scope:stakeholder_story
		# 						}
		# 						set_variable = {
		# 							name = story_owner
		# 							value = story_owner
		# 						}
		# 						set_variable = {
		# 							name = ambition
		# 							value = flag:FF_ambition_get_title
		# 						}
		# 						set_variable = {
		# 							name = coveted_title
		# 							value = scope:coveted_title
		# 						}
		# 						set_variable = {
		# 							name = ambition_score
		# 							value = scope:FF_ambition_get_title
		# 						}
		# 					}
		# 				}
		# 			}
		# 		}
		# 	}
		# }
	}
	# Ambition Get Title for child
	every_child = {
		save_scope_as = child
		scope:stakeholder = {
			save_scope_value_as = {
				name = FF_ambition_get_child_title
				value = FF_ambition_get_child_title
			}
			if = {
				limit = { scope:FF_ambition_get_child_title > 0 }
				create_story = {
					type = BMU_ambition_story
					save_scope_as = BMU_stakeholder_ambition
				}
				scope:stakeholder_story = {
					add_to_variable_list = {
						name = BMU_stakeholder_ambitions
						target = scope:BMU_stakeholder_ambition
					}
				}
				scope:BMU_stakeholder_ambition = {
					set_variable = {
						name = pressed_claim_story
						value = scope:pressed_claim
					}
					set_variable = {
						name = stakeholder_story
						value = scope:stakeholder_story
					}
					set_variable = {
						name = story_owner
						value = story_owner
					}
					set_variable = {
						name = ambition
						value = flag:FF_ambition_get_child_title
					}
					set_variable = {
						name = child
						value = scope:child
					}
					set_variable = {
						name = ambition_score
						value = scope:FF_ambition_get_child_title
					}
				}
			}
		}
	}
	# Ambition Get Gold
	scope:stakeholder = {
		save_scope_value_as = {
			name = FF_ambition_get_gold
			value = FF_ambition_get_gold
		}
		if = {
			limit = { scope:FF_ambition_get_gold > 0 }
			create_story = {
				type = BMU_ambition_story
				save_scope_as = BMU_stakeholder_ambition
			}
			scope:stakeholder_story = {
				add_to_variable_list = {
					name = BMU_stakeholder_ambitions
					target = scope:BMU_stakeholder_ambition
				}
			}
			scope:BMU_stakeholder_ambition = {
				set_variable = {
					name = pressed_claim_story
					value = scope:pressed_claim
				}
				set_variable = {
					name = stakeholder_story
					value = scope:stakeholder_story
				}
				set_variable = {
					name = story_owner
					value = story_owner
				}
				set_variable = {
					name = ambition
					value = flag:FF_ambition_get_gold
				}
				set_variable = {
					name = ambition_score
					value = scope:FF_ambition_get_gold
				}
			}
		}
	}
	# Ambition Screw Rival
	scope:stakeholder = {
		save_scope_value_as = {
			name = FF_ambition_screw_rival
			value = FF_ambition_screw_rival
		}
		if = {
			limit = { scope:FF_ambition_screw_rival > 0 }
			every_relation = {
				type = rival
				limit = {
					any_owned_story = {
						story_type = BMU_stakeholder_story
						var:pressed_claim_story = scope:pressed_claim
						has_variable = status
						var:status = flag:contender
					}
				}
				save_scope_as = rival
				scope:stakeholder = {
					create_story = {
						type = BMU_ambition_story
						save_scope_as = BMU_stakeholder_ambition
					}
					scope:stakeholder_story = {
						add_to_variable_list = {
							name = BMU_stakeholder_ambitions
							target = scope:BMU_stakeholder_ambition
						}
					}
					scope:BMU_stakeholder_ambition = {
						set_variable = {
							name = pressed_claim_story
							value = scope:pressed_claim
						}
						set_variable = {
							name = stakeholder_story
							value = scope:stakeholder_story
						}
						set_variable = {
							name = story_owner
							value = story_owner
						}
						set_variable = {
							name = ambition
							value = flag:FF_ambition_screw_rival
						}
						set_variable = {
							name = rival
							value = scope:rival
						}
						set_variable = {
							name = ambition_score
							value = scope:FF_ambition_screw_rival
						}
					}
				}
			}
		}
	}
	# Ambition Help Friend
	scope:stakeholder = {
		save_scope_value_as = {
			name = FF_ambition_help_friend
			value = FF_ambition_help_friend
		}
		if = {
			limit = { scope:FF_ambition_help_friend > 0 }
			every_relation = {
				type = friend
				limit = {
					any_owned_story = {
						story_type = BMU_stakeholder_story
						var:pressed_claim_story = scope:pressed_claim
						has_variable = status
						var:status = flag:contender
					}
				}
				save_scope_as = friend
				scope:stakeholder = {
					create_story = {
						type = BMU_ambition_story
						save_scope_as = BMU_stakeholder_ambition
					}
					scope:stakeholder_story = {
						add_to_variable_list = {
							name = BMU_stakeholder_ambitions
							target = scope:BMU_stakeholder_ambition
						}
					}
					scope:BMU_stakeholder_ambition = {
						set_variable = {
							name = pressed_claim_story
							value = scope:pressed_claim
						}
						set_variable = {
							name = stakeholder_story
							value = scope:stakeholder_story
						}
						set_variable = {
							name = story_owner
							value = story_owner
						}
						set_variable = {
							name = ambition
							value = flag:FF_ambition_help_friend
						}
						set_variable = {
							name = rival
							value = scope:friend
						}
						set_variable = {
							name = ambition_score
							value = scope:FF_ambition_help_friend
						}
					}
				}
			}
		}
	}
	#Ambition Get Council Position
	scope:stakeholder = {
		if = {
			limit = { FF_ambition_get_council_position > 0 }
			every_in_global_list = {
				variable = FF_council_position_datamodel
				set_local_variable = {
					name = council_position
					value = this
				}
				debug_log = "BMU council position"
				debug_log_scopes = no
				local_var:council_position = { debug_log_scopes = no }
				scope:stakeholder = {
					save_scope_value_as = {
						name = FF_ambition_get_council_position
						value = FF_ambition_get_council_position
					}
				}
				if = {
					limit = { scope:FF_ambition_get_council_position > 0 }
					scope:stakeholder = {
						create_story = {
							type = BMU_ambition_story
							save_scope_as = BMU_stakeholder_ambition
						}
						scope:stakeholder_story = {
							add_to_variable_list = {
								name = BMU_stakeholder_ambitions
								target = scope:BMU_stakeholder_ambition
							}
						}
						scope:BMU_stakeholder_ambition = {
							set_variable = {
								name = pressed_claim_story
								value = scope:pressed_claim
							}
							set_variable = {
								name = stakeholder_story
								value = scope:stakeholder_story
							}
							set_variable = {
								name = story_owner
								value = story_owner
							}
							set_variable = {
								name = ambition
								value = flag:FF_ambition_get_council_position
							}
							set_variable = {
								name = council_position
								value = local_var:council_position
							}
							set_variable = {
								name = ambition_score
								value = scope:FF_ambition_get_council_position
							}
						}
					}
				}
			}
		}
	}
}

BMU_execute_bargain = {
	switch = {
		trigger = var:ambition
		flag:FF_ambition_get_council_position = {
			switch = {
				trigger = var:council_position
				flag:chancellor = {
					root.var:stakeholder = {
						assign_councillor_type = {
							type = councillor_chancellor
							target = root.var:current_bargain.var:stakeholder_story.var:stakeholder
						}
					}
				}
				flag:steward = {
					root.var:stakeholder = {
						assign_councillor_type = {
							type = councillor_steward
							target = root.var:current_bargain.var:stakeholder_story.var:stakeholder
						}
					}
				}
				flag:marshal = {
					root.var:stakeholder = {
						assign_councillor_type = {
							type = councillor_marshal
							target = root.var:current_bargain.var:stakeholder_story.var:stakeholder
						}
					}
				}
				flag:spymaster = {
					root.var:stakeholder = {
						assign_councillor_type = {
							type = councillor_spymaster
							target = root.var:current_bargain.var:stakeholder_story.var:stakeholder
						}
					}
				}
			}
		}
	}
}
BMU_create_claim_press = {
	if = {
		limit = {
			exists = $TARGET$
			exists = $TARGET_TITLE$
			exists = $CONTENDER$
			exists = $UNWILLING_CONTENDER$
		}
	}
	$TARGET$ = { save_scope_as = claim_target }
	$TARGET_TITLE$ = { save_scope_as = claimed_title }
	$CONTENDER$ = { save_scope_as = contender }
	$UNWILLING_CONTENDER$ = { save_scope_as = unwilling_contender }

	scope:claim_target = { debug_log = "claim_target [THIS.Char.GetNameNoTooltip]" }
	scope:claimed_title = { debug_log = "claimed_title [THIS.Title.GetNameNoTooltip]" }
	scope:contender = { debug_log = "contender [THIS.Char.GetNameNoTooltip]" }
	scope:unwilling_contender = { debug_log = "unwilling_contender [THIS.Char.GetNameNoTooltip]" }

	scope:claim_target = {
		create_story = {
			type = BMU_press_claim_story
			save_scope_as = story
		}
	}

	add_to_global_variable_list = {
		name = BMU_claim_stories
		target = scope:story
	}

	scope:story = {
		debug_log = story
		debug_log_scopes = no
		set_variable = contention_phase
		set_variable = { name = claimed_title value = scope:claimed_title }
		set_variable = { name = claim_target value = scope:claim_target }

		story_owner = {
			add_to_variable_list = {
				name = claimed_titles
				target = scope:story
			}
			add_to_list = claimants
		}
		var:claimed_title = {
			every_claimant = {
				explicit = all
				add_to_list = claimants
			}
		}
		ordered_in_list = {
			list = claimants
			max = 99
			check_range_bounds = no
			order_by = {
				value = 0
				if = {
					limit = { has_title = scope:claimed_title }
					add = 10000
				}
				if = {
					limit = { has_strong_claim_on = scope:claimed_title }
					add = 1000
				}
				else_if = {
					limit = { has_weak_claim_on = scope:claimed_title }
					add = 900
				}
				else = {
					add = 800
				}
				add = highest_held_title_tier
			}
			
			debug_log_scopes = no
			prev = {
				add_to_variable_list = {
					name = claimants
					target = prev
				}
			}
			create_story = {
				type = BMU_vote_story
				save_scope_as = vote_story
			}
			scope:vote_story = {
				set_variable = {
					name = claim_story
					value = scope:story
				}
				set_variable = claimant
				set_variable = {
					name = stakeholder
					value = story_owner
				}
			}
			scope:story = {
				add_to_variable_list = {
					name = BMU_vote_stories
					target = scope:vote_story
				}
			}
			if = {
				limit = {
					scope:contender = this
					scope:contender = scope:unwilling_contender
				}
				BMU_support_claim_contender = {
					TITLE = scope:claimed_title
					TARGET = scope:claim_target
					CONTENDER = scope:contender
				}
				# scope:vote_story = {
				# 	set_variable = supporter
				# 	set_variable = contender
				# 	set_variable = {
				# 		name = status
				# 		value = flag:contender
				# 	}
				# 	set_variable = {
				# 		name = top_candidate
				# 		value = scope:contender
				# 	}
				# }
			}
			trigger_event = {
				id = BMU_claim_story.0010
				days = 1
			}

			clear_saved_scope = vote_story
		}
	}
}

BMU_support_claim_contender = {
	save_scope_as = supporter
	$TITLE$ = { save_scope_as = claimed_title }
	$TARGET$ = { save_scope_as = claim_target }
	$CONTENDER$ = { save_scope_as = contender }

	random_owned_story = {
		limit = {
			story_type = BMU_vote_story
			has_variable = claim_story
			var:claim_story = {
				has_variable = claimed_title
				var:claimed_title = scope:claimed_title
			}
		}
		# save_scope_as = vote_story
		# if = {
		# 	limit = { has_variable = top_candidate }
		# 	var:claim_story = {
		# 		random_in_list = {
		# 			variable = BMU_vote_stories
		# 			limit = {
		# 				has_variable = stakeholder
		# 				var:stakeholder = scope:vote_story.var:top_candidate
		# 			}
		# 			change_variable = {
		# 				name = supporter_count
		# 				subtract = 1
		# 			}
		# 		}
		# 	}
		# }
		set_variable = {
			name = top_candidate
			value = scope:contender
		}
		if = {
			limit = { NOT = { scope:contender = scope:supporter }}
			set_variable = {
				name = status
				value = flag:supporter
			}
		}
		else = {
			set_variable = {
				name = status
				value = flag:contender
			}
		}
		var:claim_story = {
			BMU_claim_story_update_top_contender = yes
		}
	}
}

BMU_claim_story_update_top_contender = {
	ordered_in_list = {
		variable = BMU_vote_stories
		limit = {
			has_variable = status
			var:status = flag:contender
			has_variable = stakeholder
			NOT = { var:stakeholder = scope:claim_target }
		}
		order_by = {
			if = { limit = { save_temporary_scope_as = temp_contender }}
			prev = {
				every_in_list = {
					variable = BMU_claim_stories
					limit = {
						has_variable = status
						OR = {
							var:status = flag:contender
							var:status = flag:supporter
						}
						has_variable = top_candidate
						var:top_candidate = scope:temp_contender
					}
					add = max_military_strength
				}
			}
		}
		prev = {
			set_variable = {
				name = top_contender
				value = prev.story_owner
			}
		}
	}
}
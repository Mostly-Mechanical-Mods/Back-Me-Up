BMU_interaction_press_claim = {
	$CLAIMANT$ = { save_scope_as = claimant }
	$CLAIM_TARGET$ = { save_scope_as = claim_target }
	$CLAIMED_TITLE$ = { save_scope_as = claimed_title }

	hidden_effect = {
		scope:claimant = {
			create_story = {
				type = BMU_contender_story
				save_scope_as = contender
			}
		}
	}
	if = {
		limit = { scope:claimed_title = { has_variable = pressed_claim }}
		scope:claimed_title.var:pressed_claim = { save_scope_as = pressed_claim }
		scope:claimant = {
			custom_description = {
				text = BMU_contender_join_pressed_claim
				subject = scope:claimant
				object = scope:claimed_title
			}
		}
		hidden_effect = {
			if = {
				limit = { exists = scope:contender }
				scope:contender = {
					set_variable = {
						name = pressed_claim_story
						value = scope:pressed_claim
					}
					set_variable = {
						name = stakeholder
						value = story_owner
					}
					set_variable = {
						name = story_owner
						value = story_owner
					}
					set_variable = {
						name = status
						value = flag:contender
					}
					set_variable = {
						name = contender
						value = this
					}
					set_variable = {
						name = gambit_budget
						value = {
							add = scope:claimed_title.tier
							add = story_owner.highest_held_title_tier
							scope:claimed_title = {
								if = { limit = { holder = prev.story_owner } add = 5 }
								else_if = { limit = { is_target_in_variable_list = { name = claim_level_4 target = prev.story_owner }} add = 4 }
								else_if = { limit = { is_target_in_variable_list = { name = claim_level_3 target = prev.story_owner }} add = 3 }
								else_if = { limit = { is_target_in_variable_list = { name = claim_level_2 target = prev.story_owner }} add = 2 }
								else_if = { limit = { is_target_in_variable_list = { name = claim_level_1 target = prev.story_owner }} add = 1 }
							}
							multiply = 10
						}
					}
					story_owner = {
						add_to_variable_list = {
							name = pressed_claim_gui
							target = scope:pressed_claim
						}
						set_variable = {
							name = pressed_claim_interaction
							value = scope:pressed_claim
						}
					}
				}
				scope:pressed_claim = {
					add_to_variable_list = {
						name = contenders
						target = scope:contender
					}
				}
			}
		}
	}
	else = {
		hidden_effect = {
			scope:claim_target = {
				create_story = {
					type = BMU_pressed_claim_story
					save_scope_as = pressed_claim
				}
				create_story = {
					type = BMU_contender_story
					save_scope_as = claim_target_contender
				}
			}
			if = {
				limit = {
					exists = scope:pressed_claim
					exists = scope:contender
					exists = scope:claim_target_contender
				}
				scope:contender = {
					set_variable = {
						name = pressed_claim_story
						value = scope:pressed_claim
					}
					set_variable = {
						name = stakeholder
						value = story_owner
					}
					set_variable = {
						name = story_owner
						value = story_owner
					}
					set_variable = {
						name = status
						value = flag:contender
					}
					set_variable = {
						name = contender
						value = this
					}
					set_variable = {
						name = gambit_budget
						value = {
							add = scope:claimed_title.tier
							add = story_owner.highest_held_title_tier
							scope:claimed_title = {
								if = { limit = { holder = prev.story_owner } add = 5 }
								else_if = { limit = { is_target_in_variable_list = { name = claim_level_4 target = prev.story_owner }} add = 4 }
								else_if = { limit = { is_target_in_variable_list = { name = claim_level_3 target = prev.story_owner }} add = 3 }
								else_if = { limit = { is_target_in_variable_list = { name = claim_level_2 target = prev.story_owner }} add = 2 }
								else_if = { limit = { is_target_in_variable_list = { name = claim_level_1 target = prev.story_owner }} add = 1 }
							}
							multiply = 10
						}
					}
					story_owner = {
						add_to_variable_list = {
							name = pressed_claim_gui
							target = scope:pressed_claim
						}
						set_variable = {
							name = pressed_claim_interaction
							value = scope:pressed_claim
						}
					}
				}
				scope:claim_target_contender = {
					set_variable = {
						name = pressed_claim_story
						value = scope:pressed_claim
					}
					set_variable = {
						name = stakeholder
						value = story_owner
					}
					set_variable = {
						name = story_owner
						value = story_owner
					}
					set_variable = {
						name = status
						value = flag:contender
					}
					set_variable = {
						name = contender
						value = this
					}
					set_variable = {
						name = gambit_budget
						value = {
							add = scope:claimed_title.tier
							add = story_owner.highest_held_title_tier
							scope:claimed_title = {
								if = { limit = { holder = prev.story_owner } add = 5 }
								else_if = { limit = { is_target_in_variable_list = { name = claim_level_4 target = prev.story_owner }} add = 4 }
								else_if = { limit = { is_target_in_variable_list = { name = claim_level_3 target = prev.story_owner }} add = 3 }
								else_if = { limit = { is_target_in_variable_list = { name = claim_level_2 target = prev.story_owner }} add = 2 }
								else_if = { limit = { is_target_in_variable_list = { name = claim_level_1 target = prev.story_owner }} add = 1 }
							}
							multiply = 10
						}
					}
					story_owner = {
						add_to_variable_list = {
							name = pressed_claim_gui
							target = scope:pressed_claim
						}
						set_variable = {
							name = pressed_claim_interaction
							value = scope:pressed_claim
						}
					}
				}
				scope:pressed_claim = {
					set_variable = {
						name = claim_target
						value = scope:claim_target
					}
					set_variable = {
						name = claimed_title
						value = scope:claimed_title
					}
					add_to_variable_list = {
						name = contenders
						target = scope:contender
					}
					add_to_variable_list = {
						name = contenders
						target = scope:claim_target_contender
					}
				}
				scope:claimed_title = {
					every_claimant = {
						scope:pressed_claim = {
							add_to_variable_list = {
								name = claimants
								target = prev
							}
						}
					}
					set_variable = {
						name = pressed_claim
						value = scope:pressed_claim
					}
				}
				scope:claim_target = {
					every_heir = {
						scope:pressed_claim = {
							add_to_variable_list = {
								name = claimants
								target = prev
							}
						}
					}
				}
			}
		}

		scope:claimant = {
			custom_description = {
				text = BMU_contender_create_pressed_claim
				subject = scope:claimant
				object = scope:claimed_title
			}
		}
		scope:claim_target = {
			custom_description = {
				text = BMU_claim_target_defend_pressed_claim
				subject = scope:claim_target
				object = scope:claimed_title
			}
		}
		scope:claimant = { add_to_list = claimants }
		scope:claim_target = { add_to_list = claimants }
		scope:claim_target = {
			every_targeting_faction = {
				limit = {
					faction_is_type = claimant_faction
					special_title = scope:claimed_title
					NOT = { has_variable = pressed_claim }
				}
				set_variable = {
					name = pressed_claim
					value = scope:pressed_claim
				}
				special_character = { set_variable = BMU_call_in_supporter_interaction_script_override }
				if = {
					limit = { NOT = { special_character = scope:claimant }}
					special_character = {
						custom_description = {
							text = BMU_contender_join_pressed_claim
							subject = this
							object = scope:claimed_title
							add_to_list = claimants
							create_story = {
								type = BMU_contender_story
								save_scope_as = faction_claimant
							}
							if = {
								limit = { exists = scope:faction_claimant }
								scope:faction_claimant = {
									set_variable = {
										name = pressed_claim_story
										value = scope:pressed_claim
									}
									set_variable = {
										name = stakeholder
										value = story_owner
									}
									set_variable = {
										name = story_owner
										value = story_owner
									}
									set_variable = {
										name = status
										value = flag:contender
									}
									set_variable = {
										name = contender
										value = this
									}
									set_variable = {
										name = gambit_budget
										value = {
											add = scope:claimed_title.tier
											add = story_owner.highest_held_title_tier
											scope:claimed_title = {
												if = { limit = { holder = prev.story_owner } add = 5 }
												else_if = { limit = { is_target_in_variable_list = { name = claim_level_4 target = prev.story_owner }} add = 4 }
												else_if = { limit = { is_target_in_variable_list = { name = claim_level_3 target = prev.story_owner }} add = 3 }
												else_if = { limit = { is_target_in_variable_list = { name = claim_level_2 target = prev.story_owner }} add = 2 }
												else_if = { limit = { is_target_in_variable_list = { name = claim_level_1 target = prev.story_owner }} add = 1 }
											}
											multiply = 10
										}
									}
									story_owner = {
										add_to_variable_list = {
											name = pressed_claim_gui
											target = scope:pressed_claim
										}
										set_variable = {
											name = pressed_claim_interaction
											value = scope:pressed_claim
										}
									}
									scope:pressed_claim = {
										add_to_variable_list = {
											name = contenders
											target = prev
										}
									}
								}
							}
						}
					}
				}
				add_to_variable_list = {
					name = pressed_claim_supporters
					target = special_character
				}
				every_faction_member = {
					limit = { NOT = { this = prev.special_character }}
					custom_description = {
						text = BMU_start_supporting_contender
						subject = this
						object = prev.special_character
						run_interaction = {
							interaction = BMU_call_in_supporter_interaction
							actor = prev.special_character
							recipient = this
							redirect = yes
							execute_threshold = decline
						}
					}
					prev = {
						add_to_variable_list = {
							name = pressed_claim_supporters
							target = prev
						}
					}
				}
				special_character = { remove_variable = BMU_call_in_supporter_interaction_script_override }
			}
		}
		scope:claimed_title = {
			every_claimant = {
				limit = { NOT = { is_in_list = claimants }}
				custom_description = {
					text = BMU_claimant_might_join_pressed_claim
					subject = this
					object = scope:claimed_title
				}
			}
		}
	}
	
	
	if = {
		limit = { exists = scope:pressed_claim }
		scope:pressed_claim = {
			every_in_list = {
				variable = contenders
				limit = { NOT = { story_owner = { is_in_list = claimants }}}
				story_owner = {
					send_interface_message = {
						type = BMU_contender_join_pressed_claim # default: send_interface_message
						# desc = event_message_effect
						left_icon = scope:claimant
						right_icon = scope:claimed_title
						custom_description = {
							text = BMU_contender_join_pressed_claim
							subject = scope:claimant
							object = scope:claimed_title
						}
					}
				}
			}
		}
	}

	hidden_effect = {
		if = {
			limit = { exists = scope:pressed_claim }
			BMU_pressed_claim_update_top_contender = { PRESSED_CLAIM = scope:pressed_claim }
			# scope:claim_target = {
			# 	every_vassal = {
			# 		limit = { BMU_is_claim_target_vassal_that_follows_pressed_claim = { PRESSED_CLAIM = scope:pressed_claim }}
			# 		scope:claimant = { BMU_set_relation_stakeholder = { FLAG = future_vassal TARGET = prev PRESSED_CLAIM = scope:pressed_claim }}
			# 	}
			# 	every_relation = {
			# 		type = rival
			# 		scope:claimant = { BMU_set_relation_stakeholder = { FLAG = contender_rival TARGET = prev PRESSED_CLAIM = scope:pressed_claim }}
			# 	}
			# }
			# scope:claimant = {
			# 	every_relation = {
			# 		type = rival
			# 		save_scope_as = rival
			# 		scope:pressed_claim = {
			# 			every_in_list = {
			# 				variable = contenders

			# 			}
			# 		}
			# 	}
			# }
		}
	}
}

BMU_update_confidence = {
	set_variable = {
		name = confidence_score
		value = BMU_confidence
	}
	if = {
		limit = { var:confidence_score >= 1.2 }
		set_variable = { name = confidence_flag value = flag:confidence_cocky }
	}
	else_if = {
		limit = { var:confidence_score >= 1 }
		set_variable = { name = confidence_flag value = flag:confidence_confident }
	}
	else_if = {
		limit = { var:confidence_score >= 1 }
		set_variable = { name = confidence_flag value = flag:confidence_concerned }
	}
	else = { set_variable = { name = confidence_flag value = flag:confidence_fearful }}
}

BMU_set_relation_stakeholder = {
	$TARGET$ = { save_scope_as = stakeholder }
	if = {
		limit = { NOT = { has_relation_stakeholder_proxy = scope:stakeholder }}
		set_relation_stakeholder_proxy = scope:stakeholder
	}
	add_relation_flag = {
		flag = $FLAG$
		target = scope:stakeholder
		relation = stakeholder_proxy
	}
	clear_saved_scope = stakeholder
}

BMU_calc_best_contenders = {
	save_scope_as = temp_story
	if  = {
		limit = { NOT = { exists = scope:pressed_claim }}
		$PRESSED_CLAIM$ = { save_scope_as = pressed_claim }
	}
	remove_variable = best_contender
	remove_variable = worthy_contender
	scope:pressed_claim = {
		ordered_in_list = {
			variable = contenders
			order_by = {
				story_owner = {
					save_temporary_scope_as = score_contender
					scope:temp_story.story_owner = { add = BMU_contender_score }
				}
			}
			max = 2
			check_range_bounds = no
			if = { limit = { story_owner = { save_temporary_scope_as = score_contender }}}
			scope:temp_story = {
				if = {
					limit = { NOT = { has_variable = best_contender }}
					set_variable = {
						name = best_contender
						value = prev.story_owner
					}
					set_variable = {
						name = best_contender_score
						value = { scope:temp_story.story_owner = { add = BMU_contender_score }}
					}
				}
				else = {
					set_variable = {
						name = worthy_contender
						value = prev.story_owner
					}
					set_variable = {
						name = worthy_contender_score
						value = { scope:temp_story.story_owner = { add = BMU_contender_score }}
					}
				}
			}
		}
	}
	clear_saved_scope = temp_pressed_claim
	clear_saved_scope = temp_story
}

BMU_spend_gambits_effect = {
	scope:actor.var:pressed_claim_interaction = { save_scope_as = pressed_claim }
	scope:actor = {
		random_contender_story = {
			limit = { var:pressed_claim_story = scope:actor.var:pressed_claim_interaction }
			change_variable = {
				name = gambit_spent
				add = BMU_supporter_gambit_cost
			}
		}
	}
}

BMU_refund_gambits_effect = {
	if = {
		limit = { exists = scope:pressed_claim }
		scope:actor = {
			random_contender_story = {
				limit = { var:pressed_claim_story = scope:pressed_claim }
				change_variable = {
					name = gambit_spent
					subtract = BMU_supporter_gambit_cost
				}
			}
		}
	}
}
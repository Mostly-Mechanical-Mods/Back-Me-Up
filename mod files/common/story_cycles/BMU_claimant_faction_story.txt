BMU_pressed_claim_story = {
	on_setup = {
		# handled in BMU_create_claim_press effect

		set_variable = {
			name = start_date
			value = current_date
		}
	}
	
	on_end = {
		every_in_list = {
			variable = BMU_stakeholder_stories
			limit = {}
			var:stakeholder = {
				every_owned_story = {
					limit = { story_type = BMU_ambition_story }
					end_story = yes
				}
			}
			end_story = yes
		}
	}

	on_owner_death = {
	}

	effect_group = {
		# months = 1
		days = 30
		first_valid = {
			triggered_effect = {
				trigger = { var:pressed_claim_phase = flag:war_phase }
				effect = {}
			}
			# War Phase
			triggered_effect = {
				trigger = { var:pressed_claim_phase = flag:declaration_phase }
				effect = {
					debug_log = "BMU_pressed_claim war_phase"
					debug_log_scopes = no
					set_variable = {
						name = pressed_claim_phase
						value = flag:war_phase
					}
					var:claim_target = { save_scope_as = claim_target }
					var:claimed_title = {
						save_scope_as = claimed_title
						save_scope_as = old_title
					}
					every_in_list = {
						variable = BMU_pressed_claim_stakeholders
						limit = {
							has_variable = status
							var:status = flag:contender
							NOT = { var:stakeholder = scope:claim_target }
							trigger_if = {
								limit = { var:stakeholder = { is_landed = no }}
								var:stakeholder = { save_temporary_scope_as = unlanded_contender }
								prev = {
									any_in_list = {
										variable = BMU_pressed_claim_stakeholders
										has_variable = status
										var:status = flag:supporter
										var:contender.var:stakeholder = scope:unlanded_contender
									}
								}
							}
						}
						var:stakeholder = {
							debug_log_scopes = no
							if = {
								limit = { is_landed = no }
								add_character_flag = flavorization_contender
								create_dynamic_title = {
									tier = duchy
									name = CONTENDER_TITLE_NAME
								}
								create_title_and_vassal_change = {
									type = created
									save_scope_as = change
									add_claim_on_loss = no
								}
								scope:new_title = {
									set_capital_county = scope:claimed_title.title_capital_county
									set_landless_title = yes
									set_destroy_on_succession = no
									set_delete_on_destroy = yes
									set_no_automatic_claims = yes
									set_definitive_form = yes
									set_can_be_named_after_dynasty = no
									change_title_holder = {
										holder = prev
										change = scope:change
									}
									set_variable = unlanded_contender
									generate_coa = pressed_claim
								}
								resolve_title_and_vassal_change = scope:change
							}
							start_war = {
								cb = BMU_pressed_claim_cb
								target = scope:claim_target
								claimant = this
								target_title = scope:claimed_title
							}
						}
					}
					every_in_list = {
						variable = BMU_pressed_claim_stakeholders
						limit = {
							has_variable = status
							var:status = flag:supporter
							has_variable = contender
						}
						var:stakeholder = { save_scope_as = supporter }
						var:contender.var:stakeholder = {
							every_character_war = {
								limit = { using_cb = BMU_pressed_claim_cb }
								if = {
									limit = { is_attacker = prev }
									add_attacker = scope:supporter
								}
								else = {
									add_defender = scope:supporter
								}
							}
						}
					}
				}
			}
			# Declaration Phase
			triggered_effect = {
				trigger = { var:pressed_claim_phase = flag:bargaining_phase }
				effect = {
					debug_log = "BMU_pressed_claim declaration_phase"
					debug_log_scopes = no
					if = {
						limit = { var:bargaining_phase = 5 }
						set_variable = {
							name = pressed_claim_phase
							value = flag:declaration_phase
						}
					}
					else = {
						change_variable = {
							name = bargaining_phase
							add = 1
						}
					}
				}
			}
			# Bargaining Phase
			triggered_effect = {
				trigger = { var:pressed_claim_phase = flag:rallying_phase }
				effect = {
					debug_log = "BMU_pressed_claim bargaining_phase"
					debug_log_scopes = no
					set_variable = {
						name = pressed_claim_phase
						value = flag:bargaining_phase
					}
					set_variable = {
						name = bargaining_phase
						value = 0
					}
				}
			}
			# Rallying Phase
			triggered_effect = {
				trigger = { var:pressed_claim_phase = flag:contention_phase }
				effect = {
					debug_log = "BMU_pressed_claim rallying_phase"
					debug_log_scopes = no

					set_variable = {
						name = pressed_claim_phase
						value = flag:rallying_phase
					}

					# Claim Target Allies
					story_owner = {
						save_scope_as = claim_target
						every_ally = {
							limit = {
								any_owned_story = {
									story_type = BMU_stakeholder_story
									var:pressed_claim_story = scope:story
									count = 0
								}
								is_landed = yes
							}
							trigger_event = {
								id = BMU_pressed_claim.0011
								days = { 1 3 }
							}
						}
					}

					# Contender Allies
					every_in_list = {
						variable = BMU_pressed_claim_stakeholders
						limit = {
							var:pressed_claim_story = scope:story
							NOT = { story_owner = scope:claim_target }
							has_variable = status
							var:status = flag:contender
						}
						var:stakeholder = { save_scope_as = contender }
						story_owner = {
							every_ally = {
								limit = {
									any_owned_story = {
										story_type = BMU_stakeholder_story
										var:pressed_claim_story = scope:story
										count = 0
									}
									is_landed = yes
								}
								trigger_event = {
									id = BMU_pressed_claim.0012
									days = { 4 7 }
								}
							}
						}
					}

					# Claim title de jure vassals
					story_owner = {
						every_vassal = {
							limit = {
								primary_title = { any_this_title_or_de_jure_above = { this = scope:story.var:claimed_title }}
								any_owned_story = {
									story_type = BMU_stakeholder_story
									var:pressed_claim_story = scope:story
									count = 0
								}
							}
							trigger_event = {
								id = BMU_pressed_claim.0013
								days = { 8 14 }
							}
						}
						if = {
							limit = { scope:story.var:claimed_title = scope:story.var:claim_target.primary_title }
							every_sub_realm_county = {
								limit = {
									NOR = {
										any_this_title_or_de_jure_above = {
											this = scope:story.var:claimed_title
										}
										any_this_title_or_de_jure_above = {
											tier = scope:story.var:claimed_title.tier
											holder = scope:story.story_owner
										}
									}
								}
								every_de_jure_top_liege = {
									limit = {
										NOT = { this = scope:story.var:claim_target }
										any_owned_story = {
											story_type = BMU_stakeholder_story
											var:pressed_claim_story = scope:story
											count = 0
										}
									}
									trigger_event = {
										id = BMU_pressed_claim.0014
										days = { 17 21 }
									}
								}
							}
						}
					}
					
					set_variable = stakeholders_added
				}
			}
		}
	}

	# effect_group = {
	# 	days = 1
	# 	triggered_effect = {
	# 		effect = {
	# 			debug_log = "DEBUG DATE [GetCurrentDate]"
	# 		}
	# 	}
	# }
}

BMU_stakeholder_story = {
	on_setup = {
		debug_log = "BMU_stakeholder_story"
		debug_log_scopes = no
		story_owner = {
			add_to_variable_list = {
				name = BMU_stakeholder_stories
				target = prev
			}
		}
		set_variable = {
			name = stakeholder
			value = story_owner
		}
		set_variable = {
			name = supporter_count
			value = 0
		}
	}
	on_end = {
		story_owner = {
			remove_list_variable = {
				name = BMU_pressed_claim_stakeholders
				target = prev
			}
			every_owned_story = {
				limit = { story_type = BMU_ambition_story }
				end_story = yes
			}
		}
	}
	effect_group = {
		weeks = 1
		triggered_effect = {
			trigger = { has_variable = pressed_claim_story }
			effect = {
				var:pressed_claim_story = {
					ordered_in_list = {
						variable = BMU_pressed_claim_stakeholders
						limit = {
							trigger_if = {
								limit = { has_variable = contender }
								NOT = { this = var:contender }
							}
						}
						order_by = { var:stakeholder = { scope:story.story_owner = { add = BMU_contender_score }}}
						scope:story = {
							set_variable = {
								name = top_alternate_candidate
								value = prev
							}
						}
					}
				}
			}
		}
	}
}
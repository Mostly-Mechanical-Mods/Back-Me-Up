BMU_target_is_relevant_in_pressed_claim_v2 = {
	$TARGET$ = { save_temporary_scope_as = temp_target }
	$PRESSED_CLAIM$ = { save_temporary_scope_as = temp_pressed_claim }
	save_temporary_scope_as = temp_contender
	OR = {
		is_vassal_of = scope:temp_target
		scope:temp_target = { is_vassal_of = scope:temp_contender }
		is_close_family_of = scope:temp_target
		has_relation_friend = scope:temp_target
		trigger_if = {
			limit = { exists = dynasty.dynast }
			dynasty.dynast = scope:temp_target
		}
		trigger_if = {
			limit = { exists = house.house_head }
			house.house_head = scope:temp_target
		}
		has_relation_stakeholder_proxy = scope:temp_target
	}
	# always = no
}

BMU_target_is_relevant_in_pressed_claims = {
	save_temporary_scope_as = PoV
	$TARGET$ = { save_temporary_scope_as = target }
	if = { limit = { NOT = { exists = scope:pressed_claim }} $PRESSED_CLAIM$ = { save_temporary_scope_as = pressed_claim }}
	OR = {
		liege = scope:target
		is_vassal_of = scope:target
		is_close_family_of = scope:target
		has_relation_friend = scope:target
		trigger_if = {
			limit = { exists = dynasty.dynast }
			dynasty.dynast = scope:target
		}
		trigger_if = {
			limit = { exists = house.house_head }
			house.house_head = scope:target
		}
		any_relation = {
			type = rival
			any_contender_story = {
				var:pressed_claim_story = scope:pressed_claim
			}
		}
	}
}

BMU_supporter_is_relevant = {
	$SUPPORTER$ = { save_temporary_scope_as = relevant_supporter }
	scope:relevant_supporter.story_owner = {
		OR = {
			liege = prev.story_owner
			is_close_family_of = prev.story_owner
			has_relation_friend = prev.story_owner
			dynasty = prev.story_owner.dynasty
			house = prev.story_owner.house
			any_relation = {
				type = rival
				any_contender_story = {
					var:pressed_claim_story = scope:relevant_supporter.var:pressed_claim_story
				}
			}
		}
	}
}

BMU_check_common_pressed_claim = {
	$STAKEHOLDER_1$ = { save_temporary_scope_as = stakeholder_1 }
	$STAKEHOLDER_2$ = { save_temporary_scope_as = stakeholder_2 }
	save_temporary_scope_value_as = {
		name = common_pressed_claim_number
		value = 0
	}
	scope:stakeholder_1 = {
		any_owned_story = {
			story_type = BMU_stakeholder_story
			save_temporary_scope_as = stakeholder_1_story
			scope:stakeholder_2 = {
				any_owned_story = {
					trigger_if = {
						limit = {
							story_type = BMU_stakeholder_story
							has_variable = status
							var:pressed_claim_story = scope:stakeholder_1_story.var:pressed_claim_story
							OR = {
								scope:stakeholder_1_story.var:status = flag:contender
								var:status = flag:contender
							}
						}
						var:pressed_claim_story = { add_to_temporary_list = common_pressed_claims }
						save_temporary_scope_as = stakeholder_2_story
						save_temporary_scope_value_as = {
							name = common_pressed_claim_number
							value = {
								add = scope:common_pressed_claim_number
								add = 1
							}
						}
					}
					count = all
				}
			}
		}
		trigger_else = { always = no }
	}
}


BMU_have_common_pressed_claim = {
	$STAKEHOLDER_1$ = { save_temporary_scope_as = stakeholder_1 }
	$STAKEHOLDER_2$ = { save_temporary_scope_as = stakeholder_2 }
	save_temporary_scope_value_as = {
		name = common_pressed_claim_number
		value = 0
	}
	scope:stakeholder_1 = {
		any_owned_story = {
			story_type = BMU_stakeholder_story
			trigger_if = {
				limit = {
					has_variable = status
					NOT = { var:status = flag:dropout }
				}
				save_temporary_scope_as = stakeholder_1_story
				scope:stakeholder_2 = {
					any_owned_story = {
						trigger_if = {
							limit = {
								story_type = BMU_stakeholder_story
								has_variable = status
								NOT = { var:status = flag:dropout }
								var:pressed_claim_story = scope:stakeholder_1_story.var:pressed_claim_story
								OR = {
									scope:stakeholder_1_story.var:status = flag:contender
									var:status = flag:contender
								}
							}
							var:pressed_claim_story = { add_to_temporary_list = common_pressed_claims }
							save_temporary_scope_as = stakeholder_2_story
							save_temporary_scope_value_as = {
								name = common_pressed_claim_number
								value = {
									add = scope:common_pressed_claim_number
									add = 1
								}
							}
						}
						count = all
					}
				}
			}
			trigger_else = { always = no }
		}
	}
	trigger_if = {
		limit = { scope:common_pressed_claim_number = 1 }
		custom_tooltip = {
			text = have_common_pressed_claim
			any_in_list = {
				list = common_pressed_claims
				save_temporary_scope_as = common_pressed_claim
			}
		}
	}
	trigger_else_if = {
		limit = {
			scope:common_pressed_claim_number > 0
			exists = scope:actor
			exists = scope:recipient
			scope:actor = { has_variable = current_pressed_claim }
		}
		custom_tooltip = {
			text = have_several_common_pressed_claim
			any_in_list = {
				list = common_pressed_claims
				this = scope:actor.var:current_pressed_claim
				save_temporary_scope_as = common_pressed_claim
			}
		}
	}
	trigger_else = {
		custom_tooltip = {
			text = have_no_common_pressed_claim
			always = no
		}
	}
}

BMU_is_claim_target_vassal_that_follows_pressed_claim = {
	$PRESSED_CLAIM$ = { save_temporary_scope_as = temp_pressed_claim }
	custom_description = {
		text = BMU_vassal_follows_pressed_claim
		subject = this
		object = scope:temp_pressed_claim.var:claimed_title
		is_landed = yes
		is_vassal_of = scope:temp_pressed_claim.story_owner
		primary_title = {
			OR = {
				target_is_de_jure_liege_or_above = scope:temp_pressed_claim.var:claimed_title
				AND = {
					scope:temp_pressed_claim.story_owner.primary_title = scope:temp_pressed_claim.var:claimed_title
					any_this_title_or_de_jure_above = {
						exists = holder
						holder = scope:temp_pressed_claim.story_owner
						count = 0
					}
				}
			}
		}
	}
}

BMU_is_involved_in_hostile_pressed_claim = {
	trigger_if = {
		limit = {
			$TARGET$ = {
				any_pressed_claim = {
					count > 0
					save_temporary_scope_as = pressed_claim_temp
				}
			}
		}
		$SUBJECT$ = {
			OR = {
				custom_description = {
					text = BMU_is_contender_in_hostile_pressed_claim
					subject = this
					object = $TARGET$ 
					any_contender_story = { var:pressed_claim_story = scope:pressed_claim_temp }
				}
				custom_description = {
					text = BMU_is_supporter_in_hostile_pressed_claim
					subject = this
					object = $TARGET$ 
					any_supporter_story = { var:pressed_claim_story = scope:pressed_claim_temp }
				}
			}
		}
	}
}
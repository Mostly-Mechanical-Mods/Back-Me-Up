BMU_can_bargain = {
	$CONTENDER$ = { save_temporary_scope_as = bargaining_contender }
	$SUPPORTER$ = { save_temporary_scope_as = bargaining_supporter }
	custom_description = {
		text = BMU_bargain_already_refused
		subject = scope:bargaining_supporter.story_owner
		scope:bargaining_contender = {
			NOT = {
				is_target_in_variable_list = {
					name = bargain_blocker
					target = scope:bargaining_supporter
				}
			}
		}
	}
	trigger_if = {
		limit = { scope:bargaining_supporter.var:status = flag:stakeholder }
		scope:bargaining_contender = { BMU_supporter_is_relevant = { SUPPORTER = scope:bargaining_supporter }}
	}
	trigger_else_if = {
		limit = { scope:bargaining_supporter.var:status = flag:supporter }
		scope:contender = {
			any_in_list = {
				variable = BMU_bargains
				var:stakeholder_story = scope:bargaining_supporter
				count = 0
			}
		}
	}
	trigger_else = { always = no }
}

BMU_supporter_is_relevant = {
	$SUPPORTER$ = { save_temporary_scope_as = relevant_supporter }
	scope:relevant_supporter.story_owner = {
		OR = {
			liege = prev.story_owner
			is_close_family_of = prev.story_owner
			has_relation_friend = prev.story_owner
			dynasty = prev.story_owner.dynasty
			house = prev.story_owner.house
			any_relation = {
				type = rival
				any_owned_story = {
					story_type = BMU_stakeholder_story
					var:pressed_claim_story = scope:relevant_supporter.var:pressed_claim_story
					var:status = flag:contender
				}
			}
		}
	}
}

BMU_bargain_can_be_struck = {
	$SUPPORTER$ = { save_temporary_scope_as = bargaining_supporter }
	$CONTENDER$ = { save_temporary_scope_as = bargaining_contender }
	save_temporary_scope_as = bargain_temp
	custom_description = {
		text = BMU_bargain_already_refused
		subject = scope:bargaining_contender.var:bargainer
		scope:bargaining_contender = {
			NOT = {
				is_target_in_variable_list = {
					name = BMU_bargains_refused
					target = scope:bargain_temp
				}
			}
		}
	}
	trigger_if = {
		limit = { scope:supporter.story_owner = { is_ai = yes }}
		var:ambition_score > 0
	}
	NOR = {
		has_variable = pending
		has_variable = bargained_with
	}
	trigger_if = {
		limit = {
			exists = scope:bargain_temp
			NOT = { exists = scope:bargain }
			scope:bargain_temp = { save_temporary_scope_as = bargain }
		}
	}
	trigger_if = {
		limit = { scope:bargain.var:ambition = flag:FF_ambition_get_council_position }
		scope:bargaining_supporter.story_owner = {
			NAND = {
				is_councillor_of = scope:bargaining_contender.story_owner
				trigger_if = {
					limit = { scope:bargain.var:council_position = flag:chancellor }
					has_council_position = councillor_chancellor
				}
				trigger_else_if = {
					limit = { scope:bargain.var:council_position = flag:steward }
					has_council_position = councillor_steward
				}
				trigger_else_if = {
					limit = { scope:bargain.var:council_position = flag:marshal }
					has_council_position = councillor_marshal
				}
				trigger_else_if = {
					limit = { scope:bargain.var:council_position = flag:spymaster }
					has_council_position = councillor_spymaster
				}
				trigger_else = { always = yes }
			}
		}
		scope:bargaining_contender = {
			any_in_list = {
				variable = BMU_bargains
				has_variable = bargained_with
				var:ambition = flag:FF_ambition_get_council_position
				var:council_position = scope:bargain.var:council_position
				count = 0
			}
		}
	}
}

BMU_ambition_can_be_councillor_of_v2 = {
	$PRESSED_CLAIM$ = { save_temporary_scope_as = pressed_claim_temp }
	$CONTENDER$ = { save_temporary_scope_as = contender_temp }
	is_capable_adult = yes
	is_imprisoned = no
	NOT = { is_at_war_with = scope:contender_temp }
	OR = {
		is_vassal_of = scope:contender_temp
		is_courtier_of = scope:contender_temp
		BMU_is_claim_target_vassal_that_follows_pressed_claim = { PRESSED_CLAIM = scope:pressed_claim_temp }
	}
}

BMU_ambition_can_be_councillor_of = {
	$PRESSED_CLAIM$ = { save_temporary_scope_as = pressed_claim_temp }
	$CONTENDER$ = { save_temporary_scope_as = contender_temp }
	$COUNCIL_POSITION$ = { save_temporary_scope_as = council_position_temp }
	is_capable_adult = yes
	is_imprisoned = no
	NOT = { is_at_war_with = scope:contender_temp }
	trigger_if = {
		limit = { has_variable = block_hire_councillor }
		NOT = { var:block_hire_councillor = scope:contender_temp }
	}
	trigger_if = {
		limit = { NOT = { liege = scope:contender_temp }}
		liege = scope:pressed_claim_temp.var:claim_target
		primary_title = {
			any_this_title_or_de_jure_above = {
				NOT = { this = scope:pressed_claim_temp.var:claimed_title }
				exists = holder
				holder = scope:pressed_claim_temp.var:claim_target
				count = 0
			}
		}
	}

	trigger_if = {
		limit = { scope:council_position_temp = flag:chancellor }
		BMU_can_be_chancellor_of = { COURT_OWNER = scope:contender_temp }
	}
	trigger_else_if = {
		limit = { scope:council_position_temp = flag:steward }
		BMU_can_be_chancellor_of = { COURT_OWNER = scope:contender_temp }
	}
	trigger_else_if = {
		limit = { scope:council_position_temp = flag:marshal }
		BMU_can_be_steward_of = { COURT_OWNER = scope:contender_temp }
	}
	trigger_else_if = {
		limit = { scope:council_position_temp = flag:spymaster }
		BMU_can_be_spymaster_of = { COURT_OWNER = scope:contender_temp }
	}
	trigger_else = {
		always = yes
	}
}

BMU_can_be_chancellor_of = {
	NOT = { has_council_position = councillor_spouse }
	OR = {
		is_ruler = yes
		AND = {
			is_female = yes
			$COURT_OWNER$.faith = { NOT = { has_doctrine_parameter = male_dominated_council } }
		}
		AND = {
			is_male = yes
			$COURT_OWNER$.faith = { NOT = { has_doctrine_parameter = female_dominated_council } }
		}
	}
}

BMU_can_be_steward_of = {
	NOT = { has_council_position = councillor_spouse }
	OR = {
		is_ruler = yes
		AND = {
			is_female = yes
			$COURT_OWNER$.faith = { NOT = { has_doctrine_parameter = male_dominated_council } }
		}
		AND = {
			is_male = yes
			$COURT_OWNER$.faith = { NOT = { has_doctrine_parameter = female_dominated_council } }
		}
	}
}

BMU_can_be_marshal_of = {
	NOT = { has_council_position = councillor_spouse }
	OR = {
		is_ruler = yes
		AND = {
			is_female = yes
			$COURT_OWNER$.faith = { NOT = { has_doctrine_parameter = male_dominated_council } }
		}
		AND = {
			is_male = yes
			$COURT_OWNER$.faith = { NOT = { has_doctrine_parameter = female_dominated_council } }
		}
		AND = {
			has_trait = shieldmaiden
			$COURT_OWNER$.culture = { has_cultural_parameter = has_access_to_shieldmaidens }
		}
	}
}

BMU_can_be_spymaster_of = {
	NOT = { has_council_position = councillor_spouse }
	exists = $COURT_OWNER$ #so we can have the argument but get no errors
}

BMU_have_common_pressed_claim = {
	$STAKEHOLDER_1$ = { save_temporary_scope_as = stakeholder_1 }
	$STAKEHOLDER_2$ = { save_temporary_scope_as = stakeholder_2 }
	save_temporary_scope_value_as = {
		name = common_pressed_claim_number
		value = 0
	}
	scope:stakeholder_1 = {
		any_owned_story = {
			story_type = BMU_stakeholder_story
			trigger_if = {
				limit = {
					has_variable = status
					NOT = { var:status = flag:dropout }
				}
				save_temporary_scope_as = stakeholder_1_story
				scope:stakeholder_2 = {
					any_owned_story = {
						trigger_if = {
							limit = {
								story_type = BMU_stakeholder_story
								has_variable = status
								NOT = { var:status = flag:dropout }
								var:pressed_claim_story = scope:stakeholder_1_story.var:pressed_claim_story
								OR = {
									scope:stakeholder_1_story.var:status = flag:contender
									var:status = flag:contender
								}
							}
							var:pressed_claim_story = { add_to_temporary_list = common_pressed_claims }
							save_temporary_scope_as = stakeholder_2_story
							save_temporary_scope_value_as = {
								name = common_pressed_claim_number
								value = {
									add = scope:common_pressed_claim_number
									add = 1
								}
							}
						}
						count = all
					}
				}
			}
			trigger_else = { always = no }
		}
	}
	trigger_if = {
		limit = { scope:common_pressed_claim_number = 1 }
		custom_tooltip = {
			text = have_common_pressed_claim
			any_in_list = {
				list = common_pressed_claims
				save_temporary_scope_as = common_pressed_claim
			}
		}
	}
	trigger_else_if = {
		limit = { scope:common_pressed_claim_number > 0 }
		custom_tooltip = {
			text = have_several_common_pressed_claim
			always = yes
		}
	}
	trigger_else = {
		custom_tooltip = {
			text = have_no_common_pressed_claim
			always = no
		}
	}
}

BMU_is_claim_target_vassal_that_follows_pressed_claim = {
	$PRESSED_CLAIM$ = { save_temporary_scope_as = pressed_claim_temp }
	custom_description = {
		text = BMU_vassal_follows_pressed_claim
		is_landed = yes
		is_vassal_of = scope:pressed_claim_temp.story_owner
		primary_title = {
			OR = {
				target_is_de_jure_liege_or_above = scope:pressed_claim_temp.var:claimed_title
				AND = {
					scope:pressed_claim_temp.story_owner.primary_title = scope:pressed_claim_temp.var:claimed_title
					any_this_title_or_de_jure_above = {
						exists = holder
						holder = scope:pressed_claim_temp.story_owner
						count = 0
					}
				}
			}
		}
	}
}

BMU_allowed_to_imprison_character_trigger = {
	$IMPRISONER$ = { save_temporary_scope_as = allowed_imprisoner }
	$PRISONER$ = { save_temporary_scope_as = allowed_prisoner }
	trigger_if = {
		limit = {
			BMU_have_common_pressed_claim = {
				STAKEHOLDER_1 = scope:allowed_imprisoner
				STAKEHOLDER_2 = scope:allowed_prisoner
			}
		}
		BMU_vassal_follows_pressed_claim = { PRESSED_CLAIM = scope:pressed_claim_temp }
	}
}